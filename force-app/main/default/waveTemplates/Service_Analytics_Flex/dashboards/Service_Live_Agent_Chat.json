{
  "name" : "Service_Live_Agent_Chat",
  "label" : "Service Live Agent Chat",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "state" : {
    "dataSourceLinks" : [ ],
    "gridLayouts" : [
      {
        "maxWidth" : 1360,
        "name" : "Default",
        "numColumns" : 48,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "listselector_Account_Selection",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 7,
                "name" : "listselector_Agent_Selection",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 13,
                "name" : "listselector_Chat_Button",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 19,
                "name" : "listselector_Product_Selection",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 25,
                "name" : "listselector_RecordType",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 38,
                "name" : "listselector_Time_Selection",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 1,
                "name" : "text_Dashboard_Header",
                "row" : 3,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ]
                }
              },
              {
                "colspan" : 4,
                "column" : 19,
                "name" : "link_Home",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#9271E8",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 23,
                "name" : "link_Channel_Review",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#9271E8",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 27,
                "name" : "link_Omni",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#9271E8",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 31,
                "name" : "link_Chat",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(99, 79, 149)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 4,
                "column" : 35,
                "name" : "link_Telephony",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#9271E8",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 39,
                "name" : "link_Knowledge_Efficiency",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 43,
                "name" : "link_Knowledge_Usage",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_header_panel",
                "row" : 1,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(146, 113, 232)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_filter_panel",
                "row" : 9,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 0
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_KPI",
                "row" : 17,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 1,
                "name" : "text_Daily_Call_Volume",
                "row" : 25,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 25,
                "column" : 1,
                "name" : "text_Timeline_subtitle",
                "row" : 28,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 31,
                "column" : 1,
                "name" : "chart_Chat_Volume_Timeline",
                "row" : 31,
                "rowspan" : 21,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 32,
                "column" : 0,
                "name" : "container_timelinechart",
                "row" : 25,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 14,
                "name" : "number_Metric_Avg_Wait_Time",
                "row" : 20,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 35,
                "name" : "number_Metric_Agent_Response_Time",
                "row" : 34,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 16,
                "column" : 32,
                "name" : "container_metrics",
                "row" : 25,
                "rowspan" : 31,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_Breakdown_15Mins",
                "row" : 57,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 18,
                "name" : "text_Agent_Performance",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "number_KPI_Total_Chat",
                "row" : 20,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "text_Total_Chats",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 14,
                "name" : "text_AverageWaitTime",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 25,
                "name" : "text_AverageHandleTime",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 9,
                "column" : 38,
                "name" : "text_AnsweringAgents",
                "row" : 17,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_15min_breakdown",
                "row" : 56,
                "rowspan" : 28,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "chart_15MinBreakdown",
                "row" : 62,
                "rowspan" : 21,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 35,
                "name" : "number_Metric_CSAT",
                "row" : 40,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_Agent_Performance",
                "row" : 84,
                "rowspan" : 39,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C5D3E0",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Agent_By_Chat_Volume",
                "row" : 89,
                "rowspan" : 33,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 35,
                "column" : 12,
                "name" : "chart_Scatter_Plot",
                "row" : 89,
                "rowspan" : 33,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_ValuesTable",
                "row" : 123,
                "rowspan" : 46,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 25,
                "name" : "number_KPI_Average_Handle_time",
                "row" : 20,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 38,
                "name" : "number_KPI_Num_Agents",
                "row" : 20,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "chart_Valuestable",
                "row" : 124,
                "rowspan" : 42,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 34,
                "name" : "chart_treemap",
                "row" : 46,
                "rowspan" : 9,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 5,
                "name" : "number_KPI_Total_Chat_Prev_Period",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Total_Chat_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 30,
                "name" : "number_KPI_Average_Handle_time_Prev_Period",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Average_Handle_time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 42,
                "name" : "number_KPI_Num_Agents_Prev_Period",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Num_Agents_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 18,
                "name" : "number_Metric_Avg_Wait_Time_Prev_Period",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Avg_Wait_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 41,
                "name" : "number_Metric_Agent_Response_Time_Prev_Period",
                "row" : 35,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Agent_Response_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 41,
                "name" : "number_Metric_CSAT_Prev_Period",
                "row" : 41,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_CSAT_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "listselector_Scatter_Plot_Group_Select",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 24,
                "column" : 23,
                "name" : "pillbox_measureSelector",
                "row" : 57,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 35,
                "name" : "number_Metric_Visitor_Response_Time",
                "row" : 27,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 41,
                "name" : "number_Metric_Visitor_Response_Time_Prev_Period",
                "row" : 28,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Visitor_Response_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 37,
                "name" : "text_Metrics_Subtitle",
                "row" : 25,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "text_15Min_Subtitle",
                "row" : 60,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(197, 211, 224)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "documentId" : "",
          "fit" : "original"
        },
        "version" : 1.0
      },
      {
        "name" : "iphone",
        "numColumns" : 12,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_Title_iphone",
                "row" : 0,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_header_panel",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(146, 113, 232)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "listselector_Chat_Button",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 6,
                "name" : "listselector_Time_Selection",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_filter_panel",
                "row" : 6,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(230, 236, 242)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "text_Total_Chats",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 7,
                "name" : "text_AverageWaitTime",
                "row" : 16,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "text_AverageHandleTime",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 7,
                "name" : "text_AnsweringAgents",
                "row" : 29,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "number_KPI_Total_Chat",
                "row" : 19,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 7,
                "name" : "number_Metric_Avg_Wait_Time",
                "row" : 19,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "number_KPI_Average_Handle_time",
                "row" : 32,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 7,
                "name" : "number_KPI_Num_Agents",
                "row" : 32,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "number_KPI_Total_Chat_Prev_Period",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Total_Chat_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 7,
                "name" : "number_Metric_Avg_Wait_Time_Prev_Period",
                "row" : 24,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Avg_Wait_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "number_KPI_Average_Handle_time_Prev_Period",
                "row" : 37,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Average_Handle_time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 7,
                "name" : "number_KPI_Num_Agents_Prev_Period",
                "row" : 37,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_KPI_Num_Agents_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_KPI",
                "row" : 14,
                "rowspan" : 27,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(2, 10, 26)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_Daily_Call_Volume",
                "row" : 42,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Timeline_subtitle",
                "row" : 45,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Chat_Volume_Timeline",
                "row" : 48,
                "rowspan" : 21,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_timelinechart",
                "row" : 41,
                "rowspan" : 29,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_Metrics_Subtitle",
                "row" : 91,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "number_Metric_Visitor_Response_Time",
                "row" : 71,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "number_Metric_Visitor_Response_Time_Prev_Period",
                "row" : 77,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Visitor_Response_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 7,
                "name" : "number_Metric_Agent_Response_Time",
                "row" : 71,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 7,
                "name" : "number_Metric_Agent_Response_Time_Prev_Period",
                "row" : 77,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_Agent_Response_Time_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 1,
                "name" : "number_Metric_CSAT",
                "row" : 82,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 1,
                "name" : "number_Metric_CSAT_Prev_Period",
                "row" : 88,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(step_Metric_CSAT_Prev_Period.result, 0, \"color\").asString()}}",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_treemap",
                "row" : 95,
                "rowspan" : 9,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_metrics",
                "row" : 70,
                "rowspan" : 24,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(6, 28, 63)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_Breakdown_15Mins",
                "row" : 106,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "pillbox_measureSelector",
                "row" : 109,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_15Min_Subtitle",
                "row" : 111,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_15MinBreakdown",
                "row" : 114,
                "rowspan" : 21,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_15min_breakdown",
                "row" : 105,
                "rowspan" : 32,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "text_Agent_Performance",
                "row" : 138,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "listselector_Scatter_Plot_Group_Select",
                "row" : 142,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Agent_By_Chat_Volume",
                "row" : 180,
                "rowspan" : 29,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Scatter_Plot",
                "row" : 146,
                "rowspan" : 33,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_Agent_Performance",
                "row" : 137,
                "rowspan" : 73,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 10,
                "column" : 1,
                "name" : "chart_Valuestable",
                "row" : 214,
                "rowspan" : 36,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_ValuesTable",
                "row" : 210,
                "rowspan" : 43,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 1,
                "name" : "text_ChatDetails_iphone",
                "row" : 210,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "container_1",
                "row" : 94,
                "rowspan" : 11,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [
          "maxWidth(599)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(197, 211, 224)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "documentId" : "",
          "fit" : "original"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "step_KPI_Num_Agents" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "User.Name"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_15_Min_Breakdown" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\";a = filter a by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('StartTime_15Min_Year','StartTime_15Min_Month','StartTime_15Min_Day')\")}};a = group a by ('StartTime_15Min_Year', 'StartTime_15Min_Month', 'StartTime_15Min_Day', 'StartTime_15Min_Hour', 'StartTime_15Min_Minute');a = foreach a generate ((('StartTime_15Min_Year' + \"~~~\") + 'StartTime_15Min_Month') + \"~~~\") + 'StartTime_15Min_Day' as 'each_date', ('StartTime_15Min_Hour' + \"~~~\") + 'StartTime_15Min_Minute' as 'StartTime_15Min_Hour~~~StartTime_15Min_Minute', avg('AverageResponseTimeVisitor') as 'avg_AverageResponseTimeVisitor', avg('AverageResponseTimeOperator') as 'avg_AverageResponseTimeOperator', avg('WaitTime') as 'avg_WaitTime', count() as 'count_day15min_Chat_Volume';a = group a by 'StartTime_15Min_Hour~~~StartTime_15Min_Minute';a = foreach a generate 'StartTime_15Min_Hour~~~StartTime_15Min_Minute' as 'StartTime_15Min_Hour~~~StartTime_15Min_Minute', round(sum('avg_AverageResponseTimeVisitor') / unique('each_date'), 0) as 'avg_AverageResponseTimeVisitor', round(sum('avg_WaitTime') / unique('each_date'), 0) as 'avg_WaitTime', round(sum('avg_AverageResponseTimeOperator') / unique('each_date'), 0) as 'avg_AverageResponseTimeOperator', round(sum('count_day15min_Chat_Volume') / unique('each_date'), 0) as 'count_Chat Volume';",
            "measures" : [
              [
                "{{column(step_Static_15min_Measure_Select.selection, [\"function\"]).asObject()}}",
                "{{column(step_Static_15min_Measure_Select.selection, [\"value\"]).asObject()}}"
              ]
            ],
            "autoFilter" : true,
            "groups" : [
              [
                "StartTime_15Min_Hour~~~StartTime_15Min_Minute"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Chat_Volume_Timeline" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              [
                "RequestTime_Year",
                "RequestTime_Month",
                "RequestTime_Day"
              ]
            ],
            "filters" : [
              [
                "RequestTime",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "step_Metric_CSAT" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "CSAT"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "CSAT",
                [
                  [
                    -10
                  ]
                ],
                ">="
              ],
              [
                "Case.Status",
                [
                  "Closed"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Metric_Visitor_Response_Time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "AverageResponseTimeVisitor"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_KPI_Average_Handle_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "ChatDuration"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Scatter_Plot_Measure_Select" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "CSAT"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "# Agent Message",
            "value" : "OperatorMessageCount"
          },
          {
            "display" : "CSAT",
            "value" : "CSAT"
          }
        ]
      },
      "step_Metric_Avg_Wait_Time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "WaitTime"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_KPI_Num_Agents_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (unique(curYear.'User.Name') - unique(comparePeriod.'User.Name'))/unique(comparePeriod.'User.Name' ) *100 as 'unique_Percent', (case when (unique(curYear.'User.Name') - unique(comparePeriod.'User.Name'))/unique(comparePeriod.'User.Name') *100 < 0 then \"#f2536d\" when (unique(curYear.'User.Name') - unique(comparePeriod.'User.Name'))/unique(comparePeriod.'User.Name') *100 > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Product_Selection" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseProduct}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "step_Scatter_Plot" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "AverageResponseTimeOperator"
              ],
              [
                "avg",
                "CSAT"
              ],
              [
                "count",
                "*"
              ]
            ],
            "groups" : "{{column(step_Scatter_Plot_Group_Select.selection, [\"value\"]).asObject()}}",
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ],
              [
                "CSAT",
                [
                  [
                    -10
                  ]
                ],
                ">"
              ],
              [
                "Case.Status",
                [
                  "Closed"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "step_Metric_Agent_Response_Time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "AverageResponseTimeOperator"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_KPI_Total_Chat_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 as 'unique_Percent', (case when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 < 0 then \"#3CAF6D\" when (count(curYear) - count(comparePeriod))/count(comparePeriod) *100 > 0 then \"#f2536d\"  else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Chat_Button_Selection" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "step_Chat_Button_Selection",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "LiveChatButton.MasterLabel"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Metric_Avg_Wait_Time_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'WaitTime') - avg(comparePeriod.'WaitTime'))/avg(comparePeriod.'WaitTime' ) *100 as 'unique_Percent', (case when (avg(curYear.'WaitTime') - avg(comparePeriod.'WaitTime'))/avg(comparePeriod.'WaitTime') *100 < 0 then \"#3CAF6D\" when (avg(curYear.'WaitTime') - avg(comparePeriod.'WaitTime'))/avg(comparePeriod.'WaitTime') *100 > 0 then \"#f2536d\"  else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Valuestable" : {
        "groups" : [ ],
        "isFacet" : true,
        "numbers" : [ ],
        "query" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; q = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = foreach q generate 'Name' as 'Name', 'Case.CaseNumber' as 'Case.CaseNumber','Case.Account.Name' as 'Case.Account.Name','User.Name' as 'User.Name','ChatDuration' as 'ChatDuration','WaitTime' as 'WaitTime','OperatorMessageCount' as 'OperatorMessageCount',  'Case.${Constants.CaseSeverityLevel}' as 'Priority','Case.${Constants.CaseProduct}' as '${Constants.CaseProductLabel}'; q = limit q 100;",
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false
      },
      "step_Metric_Agent_Response_Time_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'AverageResponseTimeOperator') - avg(comparePeriod.'AverageResponseTimeOperator'))/avg(comparePeriod.'AverageResponseTimeOperator' ) *100 as 'unique_Percent', (case when (avg(curYear.'AverageResponseTimeOperator') - avg(comparePeriod.'AverageResponseTimeOperator'))/avg(comparePeriod.'AverageResponseTimeOperator') *100 < 0 then \"#3CAF6D\" when (avg(curYear.'AverageResponseTimeOperator') - avg(comparePeriod.'AverageResponseTimeOperator'))/avg(comparePeriod.'AverageResponseTimeOperator') *100 > 0 then \"#f2536d\"  else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Time_Selection" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "label" : "",
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Last 180 Days"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "YTD",
            "Backlog30DayClose" : "[\"current day - 395 days\"..\"current day - 1 year\"]",
            "BacklogCompare" : [
              "current day - 1 year",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Year",
            "ClosedField" : "'ClosedDate_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "year",
                0
              ],
              [
                "year",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "current year",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month",
            "LastPeriodCompare" : [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "LastYearCompare" : [
              "current year - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "year",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "SAQL" : "coalesce((avg(ThisYear['Resolution_Time__c'])-avg(LastYear['Resolution_Time__c']))/avg(LastYear['Resolution_Time__c']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "QTD",
            "Backlog30DayClose" : "[\"current day - 120 days\"..\"current day - 1 quarter\"]",
            "BacklogCompare" : [
              "current day - 1 quarter",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Quarter",
            "ClosedField" : "'ClosedDate_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "quarter",
                0
              ],
              [
                "quarter",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "current quarter",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Week",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Week')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Week",
            "LastPeriodCompare" : [
              "current quarter - 1 quarter",
              "current day - 1 quarter"
            ],
            "LastYearCompare" : [
              "current quarter - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "quarter",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "SAQL" : "coalesce((avg(ThisYear['Resolution_Time__c'])-avg(LastYear['Resolution_Time__c']))/avg(LastYear['Resolution_Time__c']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "MTD",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 1 month\"]",
            "BacklogCompare" : [
              "current day - 1 month",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Month",
            "ClosedField" : "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "month",
                0
              ],
              [
                "month",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "current month",
              "current month"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "LastPeriodCompare" : [
              "current month - 1 month",
              "current day - 1 month"
            ],
            "LastYearCompare" : [
              "current month - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 7 Days",
            "Backlog30DayClose" : "[\"current day - 37 days\"..\"current day - 7 days\"]",
            "BacklogCompare" : [
              "current day - 1 week",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 7 Days",
            "ClosedField" : "'ClosedDate_Month','ClosedDate_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "day",
                -7
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "7 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month'+\"~~~\"+'ClosedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month','ClosedDate_Day')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "LastPeriodCompare" : [
              "7 days ago - 1 week",
              "current day - 1 week"
            ],
            "LastYearCompare" : [
              "7 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "week",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 2 weeks",
            "Backlog30DayClose" : "[\"current day - 14 days\"..\"current day - 14 days\"]",
            "BacklogCompare" : [
              "current day - 14 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 14 Days",
            "ClosedField" : "'ClosedDate_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "day",
                -14
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "14 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Week",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Week')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Week",
            "LastPeriodCompare" : [
              "14 days ago - 14 days",
              "current day - 14 days"
            ],
            "LastYearCompare" : [
              "14 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 30 Days",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 30 days\"]",
            "BacklogCompare" : [
              "current day - 30 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 30 Days",
            "ClosedField" : "'ClosedDate_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "day",
                -30
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "30 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Week",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Week')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Week')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Week",
            "LastPeriodCompare" : [
              "30 days ago - 30 days",
              "current day - 30 days"
            ],
            "LastYearCompare" : [
              "30 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 180 Days",
            "Backlog30DayClose" : "[\"current day - 240 days\"..\"current day - 180 days\"]",
            "BacklogCompare" : [
              "current day - 180 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 180 Days",
            "ClosedField" : "'ClosedDate_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "day",
                -180
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "180 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month",
            "GenerateClosedDate" : "'ClosedDate_Year'+\"~~~\"+'ClosedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('ClosedDate_Year','ClosedDate_Month')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month",
            "LastPeriodCompare" : [
              "180 days ago - 180 days",
              "current day - 180 days"
            ],
            "LastYearCompare" : [
              "180 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          }
        ]
      },
      "step_Static_15min_Measure_Select" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Chat Volume"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "Chat Volume",
            "value" : "Chat Volume",
            "function" : "count"
          },
          {
            "display" : "Avg Wait",
            "value" : "WaitTime",
            "function" : "avg"
          },
          {
            "display" : "Avg Agent Response",
            "value" : "AverageResponseTimeOperator",
            "function" : "avg"
          },
          {
            "display" : "Avg Visitor Response",
            "value" : "AverageResponseTimeVisitor",
            "function" : "avg"
          }
        ]
      },
      "step_Metric_Visitor_Response_Time_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'AverageResponseTimeVisitor') - avg(comparePeriod.'AverageResponseTimeVisitor'))/avg(comparePeriod.'AverageResponseTimeVisitor' ) *100 as 'unique_Percent', (case when (avg(curYear.'AverageResponseTimeVisitor') - avg(comparePeriod.'AverageResponseTimeVisitor'))/avg(comparePeriod.'AverageResponseTimeVisitor') *100 < 0 then \"#3CAF6D\" when (avg(curYear.'AverageResponseTimeVisitor') - avg(comparePeriod.'AverageResponseTimeVisitor'))/avg(comparePeriod.'AverageResponseTimeVisitor') *100 > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Agent_By_Chat_Volume" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "User.Name"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_KPI_Total_Chat" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_KPI_Average_Handle_time_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\"; curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 as 'unique_Percent', (case when (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 < 0 then \"#3CAF6D\" when (avg(curYear.'ChatDuration') - avg(comparePeriod.'ChatDuration'))/avg(comparePeriod.'ChatDuration') *100 > 0 then \"#f2536d\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_Scatter_Plot_No_CSAT" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "AverageResponseTimeOperator"
              ],
              [
                "count",
                "*"
              ]
            ],
            "groups" : "{{column(step_Scatter_Plot_Group_Select.selection, [\"value\"]).asObject()}}",
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "step_Agent_Selection" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "User.Name"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "step_Chat_Count_by_types" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Status"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "step_Scatter_Plot_Group_Select" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Agent"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "Agent",
            "value" : "User.Name"
          },
          {
            "display" : "Account",
            "value" : "Case.Account.Name"
          },
          {
            "display" : "${Constants.CaseProductLabel}",
            "value" : "Case.${Constants.CaseProduct}"
          }
        ]
      },
      "step_Metric_CSAT_Prev_Period" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "unique",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceChatTranscript.Alias}\";  q = filter q by 'CSAT' >= -10;q = filter q by 'Case.Status' == \"Closed\";curYear = filter q by {{cell(step_Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; comparePeriod = filter q by {{cell(step_Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  b = cogroup curYear by all, comparePeriod by all; b = foreach b generate (avg(curYear.'CSAT') - avg(comparePeriod.'CSAT'))/avg(comparePeriod.'CSAT' ) *100 as 'unique_Percent', (case when (avg(curYear.'CSAT') - avg(comparePeriod.'CSAT'))/avg(comparePeriod.'CSAT') *100 < 0 then \"#f2536d\" when (avg(curYear.'CSAT') - avg(comparePeriod.'CSAT'))/avg(comparePeriod.'CSAT') *100 > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Step_RecordType_Selection" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "label" : "",
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.RecordType.Name"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "options" : { },
          "visualizationType" : "hbar"
        }
      },
      "step_Account_Selection" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceChatTranscript.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.Account.Name"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(step_Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "pillbox_measureSelector" : {
        "parameters" : {
          "compact" : false,
          "displayTemplate" : "[]",
          "exploreLink" : false,
          "measureField" : "count",
          "step" : "step_Static_15min_Measure_Select"
        },
        "type" : "pillbox"
      },
      "listselector_Agent_Selection" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "step_Agent_Selection",
          "title" : "Agents"
        },
        "type" : "listselector"
      },
      "link_Chat" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Live Agent Chat'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Chat",
          "textAlignment" : "center",
          "textColor" : "rgb(99, 79, 149)"
        },
        "type" : "link"
      },
      "number_KPI_Average_Handle_time" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "avg_ChatDuration",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "step" : "step_KPI_Average_Handle_time",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "number_Metric_Avg_Wait_Time" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "measureField" : "avg_WaitTime",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "step" : "step_Metric_Avg_Wait_Time",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#FFFFFF",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "container_KPI" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Metrics_Subtitle" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "* Metrics compared to prior period",
          "textAlignment" : "left",
          "textColor" : "rgb(197, 211, 224)"
        },
        "type" : "text"
      },
      "link_Knowledge_Usage" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Knowledge Usage'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Knowledge Usage",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "chart_Chat_Volume_Timeline" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : " "
          },
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "# of Chat Sessions"
          },
          "step" : "step_Chat_Volume_Timeline",
          "theme" : "dark"
        },
        "type" : "chart"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_ChatDetails_iphone" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Chat Details",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_Agent_Performance" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_AverageWaitTime" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Average Wait Time",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_AverageHandleTime" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Average Handle Time\n",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_KPI_Total_Chat" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "step" : "step_KPI_Total_Chat",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_timelinechart" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_KPI_Average_Handle_time_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "step_KPI_Average_Handle_time_Prev_Period",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_Channel_Review" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Channel Review'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Channel Review",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "text_15Min_Subtitle" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "*Based on Chat Start Time",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "type" : "text"
      },
      "listselector_RecordType" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "Step_RecordType_Selection",
          "title" : "Record Type"
        },
        "type" : "listselector"
      },
      "container_15min_breakdown" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_Metric_Agent_Response_Time" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_AverageResponseTimeOperator",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "step_Metric_Agent_Response_Time",
          "textAlignment" : "left",
          "title" : "Avg Agent Response Time",
          "titleColor" : "#FFFFFF",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "listselector_Chat_Button" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "step_Chat_Button_Selection",
          "title" : "Chat Button"
        },
        "type" : "listselector"
      },
      "container_filter_panel" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_KPI_Num_Agents_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "step_KPI_Num_Agents_Prev_Period",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "text_Daily_Call_Volume" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Requested Chat Volume",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_Timeline_subtitle" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Click on a day to view chat and number of agent breakdown below ",
          "textAlignment" : "left",
          "textColor" : "rgb(197, 211, 224)"
        },
        "type" : "text"
      },
      "link_Home" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Analytics Overview'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Overview",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "link_Omni" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Omni'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Omni",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "number_Metric_Visitor_Response_Time_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "step_Metric_Visitor_Response_Time_Prev_Period",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_15MinBreakdown" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "vbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "step_15_Min_Breakdown",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : "15 Minute Windows"
          }
        },
        "type" : "chart"
      },
      "chart_treemap" : {
        "parameters" : {
          "showValues" : true,
          "legend" : {
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "visualizationType" : "treemap",
          "step" : "step_Chat_Count_by_types",
          "theme" : "dark",
          "exploreLink" : true,
          "title" : {
            "label" : "Chat Count by Types",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          }
        },
        "type" : "chart"
      },
      "text_AnsweringAgents" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Number of Agents Answering Chats\n",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "text_Breakdown_15Mins" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Breakdown by 15 mins",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_Metric_CSAT" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_CSAT",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "step_Metric_CSAT",
          "textAlignment" : "left",
          "title" : "CSAT",
          "titleColor" : "#FFFFFF",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "text_Dashboard_Header" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Chat",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_Total_Chats" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Total Chats",
          "textAlignment" : "left",
          "textColor" : "#FFFFFF"
        },
        "type" : "text"
      },
      "number_KPI_Num_Agents" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "unique_User.Name",
          "numberColor" : "#FFFFFF",
          "numberSize" : 32,
          "step" : "step_KPI_Num_Agents",
          "textAlignment" : "left",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "chart_Valuestable" : {
        "parameters" : {
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "step" : "step_Valuestable"
        },
        "type" : "table"
      },
      "text_Title_iphone" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "Chat",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "listselector_Scatter_Plot_Group_Select" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : true,
          "measureField" : "count",
          "step" : "step_Scatter_Plot_Group_Select",
          "title" : ""
        },
        "type" : "listselector"
      },
      "number_KPI_Total_Chat_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "step_KPI_Total_Chat_Prev_Period",
          "textAlignment" : "center",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "listselector_Account_Selection" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "step_Account_Selection",
          "title" : "Account"
        },
        "type" : "listselector"
      },
      "pillbox_Scatter_Plot_Measure_Select" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "measureField" : "count",
          "step" : "step_Scatter_Plot_Measure_Select"
        },
        "type" : "pillbox"
      },
      "container_ValuesTable" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_desktop_only" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "This dashboard is designed for \n desktop viewing only",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "listselector_Time_Selection" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : true,
          "step" : "step_Time_Selection",
          "title" : "Date Range"
        },
        "type" : "listselector"
      },
      "number_Metric_Visitor_Response_Time" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_AverageResponseTimeVisitor",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "step_Metric_Visitor_Response_Time",
          "textAlignment" : "left",
          "title" : "Avg Visitor Response Time",
          "titleColor" : "#FFFFFF",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "text_Agent_Performance" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Agent Performance",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_Agent_By_Chat_Volume" : {
        "parameters" : {
          "autoFitMode" : "none",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : false,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "sync",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "Agents by Chat Volume ",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "binValues" : false,
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "step_Agent_By_Chat_Volume",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : true,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "link_Telephony" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Telephony'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Telephony",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "chart_Scatter_Plot" : {
        "parameters" : {
          "legend" : {
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "visualizationType" : "scatter",
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "theme" : "wave",
          "step" : "step_Scatter_Plot",
          "exploreLink" : true,
          "title" : {
            "label" : "{{cell(step_Scatter_Plot_Group_Select.selection,0, \"display\").asString()}} Performance by Chat Volume and Response Time",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          }
        },
        "type" : "chart"
      },
      "number_Metric_Avg_Wait_Time_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "step_Metric_Avg_Wait_Time_Prev_Period",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_header_panel" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_Metric_Agent_Response_Time_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "step_Metric_Agent_Response_Time_Prev_Period",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "link_Knowledge_Efficiency" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Knowledge Efficiency'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Knowledge Efficiency",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "listselector_Product_Selection" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "step_Product_Selection",
          "title" : "${Constants.CaseProductLabel}"
        },
        "type" : "listselector"
      },
      "number_Metric_CSAT_Prev_Period" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "unique_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "step_Metric_CSAT_Prev_Period",
          "textAlignment" : "right",
          "title" : "",
          "titleColor" : "#335779",
          "titleSize" : 16
        },
        "type" : "number"
      },
      "container_metrics" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      }
    }
  }
}