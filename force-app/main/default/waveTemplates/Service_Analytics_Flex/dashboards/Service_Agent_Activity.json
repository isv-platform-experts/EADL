{
  "name" : "Service_Agent_Activity",
  "label" : "Service Agent Activity",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "state" : {
    "dataSourceLinks" : [ ],
    "gridLayouts" : [
      {
        "maxWidth" : 1360,
        "name" : "Default",
        "numColumns" : 48,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 13,
                "column" : 1,
                "name" : "text_Agent_Activity",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 35,
                "name" : "link_Home",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 11,
                "name" : "listselector_filter_account",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 29,
                "name" : "listselector_filter_activity_owner",
                "row" : 20,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 21,
                "name" : "listselector_filter_case_type",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 31,
                "name" : "listselector_filter_case_record_type",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 16,
                "name" : "listselector_filter_role",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "listselector_Time_Selection",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 35,
                "name" : "number_kpi_activity_per_agent",
                "row" : 65,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 35,
                "name" : "number_kpi_total_cases_with_activities",
                "row" : 36,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 41,
                "name" : "number_kpi_agent_vs_team",
                "row" : 67,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(kpi_agent_vs_team.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(kpi_agent_vs_team.result, 0, \"color\").asString()}}",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "number_kpi_agent_count",
                "row" : 84,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [
                    "bottom"
                  ]
                }
              },
              {
                "colspan" : 6,
                "column" : 35,
                "name" : "number_kpi_total_activity",
                "row" : 27,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "number_kpi_completed_activities",
                "row" : 88,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [
                    "bottom"
                  ]
                }
              },
              {
                "colspan" : 18,
                "column" : 10,
                "name" : "text_Activity_Analysis_by_Volume_Duration_and_Avg_Activity_per_Case",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 13,
                "column" : 34,
                "name" : "chart_activity_over_time",
                "row" : 72,
                "rowspan" : 9,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 27,
                "column" : 1,
                "name" : "text_Activity_Segmentation",
                "row" : 66,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Activity_Breakdown",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_pie_activity_type",
                "row" : 30,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_activity_count_by_case_priority",
                "row" : 48,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "listselector_filter_case_origin",
                "row" : 72,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 13,
                "name" : "listselector_filter_product",
                "row" : 72,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 2,
                "name" : "chart_activity_by_case_origin",
                "row" : 76,
                "rowspan" : 18,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 13,
                "name" : "chart_activity_by_product",
                "row" : 76,
                "rowspan" : 18,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 24,
                "name" : "chart_activity_by_reason",
                "row" : 76,
                "rowspan" : 18,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 23,
                "column" : 10,
                "name" : "chart_scatter_activity_per_case",
                "row" : 28,
                "rowspan" : 34,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "text_Activity_Summary",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_5",
                "row" : 11,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "listselector_filter_case_status",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "listselector_IsClosed_21",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_6",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#9271E8",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 39,
                "name" : "link_Performance",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 43,
                "name" : "link_Activity",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(89, 65, 149)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 25,
                "column" : 9,
                "name" : "container_7",
                "row" : 19,
                "rowspan" : 45,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 0,
                "name" : "container_8",
                "row" : 19,
                "rowspan" : 45,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 34,
                "column" : 0,
                "name" : "container_9",
                "row" : 64,
                "rowspan" : 32,
                "widgetStyle" : {
                  "borderEdges" : [
                    "top"
                  ]
                }
              },
              {
                "colspan" : 4,
                "column" : 26,
                "name" : "listselector_Static_Duration",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 41,
                "name" : "number_cases_with_activities_PrevPeriod",
                "row" : 38,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(cases_with_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(cases_with_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 41,
                "name" : "number_total_activities_PrevPeriod",
                "row" : 29,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(total_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(total_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 9,
                "column" : 24,
                "name" : "listselector_filter_reason",
                "row" : 72,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_10",
                "row" : 96,
                "rowspan" : 33,
                "widgetStyle" : {
                  "borderEdges" : [
                    "top"
                  ]
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "table_lens_1",
                "row" : 102,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "number_kpi_activity_per_case",
                "row" : 45,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 34,
                "name" : "chart_activity_per_case_over_time",
                "row" : 52,
                "rowspan" : 9,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 1,
                "name" : "text_Case_Details",
                "row" : 97,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_filter_info_text",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_byType",
                "row" : 27,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_byCasePriority",
                "row" : 45,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 14,
                "column" : 34,
                "name" : "container_21",
                "row" : 19,
                "rowspan" : 77,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 18,
                "column" : 10,
                "name" : "text_bubble_info_text",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#C5D3E0",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "documentId" : "",
          "fit" : "original"
        },
        "version" : 1.0
      },
      {
        "name" : "iPhone",
        "numColumns" : 6,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Agent_Activity_iphone",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_6",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#9271E8",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "listselector_filter_role",
                "row" : 2,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "listselector_Time_Selection",
                "row" : 3,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_5",
                "row" : 2,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Activity_Breakdown",
                "row" : 17,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_filter_info_text",
                "row" : 18,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_byType",
                "row" : 19,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_pie_activity_type",
                "row" : 20,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_byCasePriority",
                "row" : 25,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_count_by_case_priority",
                "row" : 26,
                "rowspan" : 5,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_8",
                "row" : 17,
                "rowspan" : 14,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "listselector_filter_activity_owner",
                "row" : 2,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Activity_Analysis_by_Volume_Duration_and_Avg_Activity_per_Case",
                "row" : 9,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_bubble_info_text",
                "row" : 10,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_scatter_activity_per_case",
                "row" : 11,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_7",
                "row" : 9,
                "rowspan" : 8,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Activity_Summary",
                "row" : 4,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_total_activity",
                "row" : 5,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 0,
                "name" : "number_total_activities_PrevPeriod",
                "row" : 7,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(total_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(total_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "number_kpi_total_cases_with_activities",
                "row" : 5,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 3,
                "name" : "number_cases_with_activities_PrevPeriod",
                "row" : 7,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(cases_with_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(cases_with_activities_PrevPeriod.result, 0, \"color\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "number_kpi_activity_per_case",
                "row" : 31,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_per_case_over_time",
                "row" : 33,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "number_kpi_activity_per_agent",
                "row" : 37,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 2,
                "column" : 0,
                "name" : "number_kpi_agent_vs_team",
                "row" : 39,
                "rowspan" : 1,
                "widgetStyle" : {
                  "backgroundColor" : "{{cell(kpi_agent_vs_team.result, 0, \"color\").asString()}}",
                  "borderColor" : "{{cell(kpi_agent_vs_team.result, 0, \"color\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_over_time",
                "row" : 40,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_agent_count",
                "row" : 44,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "number_kpi_completed_activities",
                "row" : 44,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_21",
                "row" : 44,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Activity_Segmentation",
                "row" : 46,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 0,
                "name" : "listselector_filter_case_origin",
                "row" : 48,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 0,
                "name" : "listselector_filter_product",
                "row" : 54,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 5,
                "column" : 0,
                "name" : "listselector_filter_reason",
                "row" : 60,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_by_case_origin",
                "row" : 49,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_by_product",
                "row" : 55,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_activity_by_reason",
                "row" : 61,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_9",
                "row" : 46,
                "rowspan" : 19,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 0,
                "name" : "text_Case_Details",
                "row" : 65,
                "rowspan" : 1,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "table_lens_1",
                "row" : 66,
                "rowspan" : 9,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_10",
                "row" : 65,
                "rowspan" : 10,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_22",
                "row" : 4,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_23",
                "row" : 31,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_24",
                "row" : 33,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_25",
                "row" : 37,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left",
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_26",
                "row" : 40,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              }
            ]
          }
        ],
        "rowHeight" : "normal",
        "selectors" : [
          "maxWidth(599)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#E6ECF2",
          "cellSpacingX" : 0,
          "cellSpacingY" : 8,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "filter_activity_owner" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Owner.Name"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_case_record_type" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseRecordTypeField}"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_case_status" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.IsClosed"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_total_activity" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_agent_count" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "Owner.Name"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_by_case_origin" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*",
                null,
                {
                  "display" : "Number of Activities"
                }
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseOrigin}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_by_reason" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*",
                null,
                {
                  "display" : "Number of Activities"
                }
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseReason}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "activity_cnt",
                null,
                {
                  "display" : "Average Number of Activities"
                }
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\";q = filter q by {{column(IsClosed_21.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(pie_activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}};q = filter q by {{column(activity_count_by_case_priority.selection, [\"Case.${Constants.CaseSeverityLevel}\"]).asEquality(\"Case.${Constants.CaseSeverityLevel}\")}};q = filter q by {{column(filter_account.selection, [\"Case.Account.Name\"]).asEquality(\"Case.Account.Name\")}}; q = filter q by {{column(filter_case_record_type.selection, [\"Case.${Constants.CaseRecordTypeField}\"]).asEquality(\"Case.${Constants.CaseRecordTypeField}\")}} && {{column(filter_case_status.selection, [\"Case.IsClosed\"]).asEquality(\"Case.IsClosed\")}}; q = filter q by {{column(filter_role.selection, [\"Case.Role.Name\"]).asEquality(\"Case.Role.Name\")}}; q = filter q by {{column(filter_product.selection, [\"Case.${Constants.CaseProduct}\"]).asEquality(\"Case.${Constants.CaseProduct}\")}} && {{column(activity_by_product.selection, [\"Case.${Constants.CaseProduct}\"]).asEquality(\"Case.${Constants.CaseProduct}\")}}; q = filter q by {{column(filter_reason.selection, [\"Case.${Constants.CaseReason}\"]).asEquality(\"Case.${Constants.CaseReason}\")}} && {{column(activity_by_reason.selection, [\"Case.${Constants.CaseReason}\"]).asEquality(\"Case.${Constants.CaseReason}\")}}; q = filter q by {{column(filter_case_origin.selection, [\"Case.${Constants.CaseOrigin}\"]).asEquality(\"Case.${Constants.CaseOrigin}\")}} && {{column(activity_by_case_origin.selection, [\"Case.${Constants.CaseOrigin}\"]).asEquality(\"Case.${Constants.CaseOrigin}\")}}; q = filter q by {{column(filter_case_type.selection, [\"Case.${Constants.CaseType}\"]).asEquality(\"Case.${Constants.CaseType}\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};r = filter q by ({{column(filter_activity_owner.selection, [\"Owner.Name\"]).asEquality(\"Owner.Name\")}} && {{column(scatter_activity_per_case.selection, [\"Owner.Name\"]).asEquality(\"Owner.Name\")}}); r = group r by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}});r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('Owner.Id') as 'avg_activity_cnt', (case when (\"{{cell(filter_activity_owner.selection, 0, \"Owner.Name\").asString()}}\" == \"all\" && \"{{cell(scatter_activity_per_case.selection, 0, \"Owner.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Agents\" end) as 'Performance'; s = group q by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('Owner.Id') as 'avg_activity_cnt', \"Team\" as 'Performance';u = union r, s; u = filter u by 'Performance' != \"ALL\";",
            "groups" : [
              "{{cell(Time_Selection.selection, 0, \"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "total_activities_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastYearCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#D4504C\" when 100*(count(s)-count(r))/count(r) > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_count_by_case_priority" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseSeverityLevel}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "scatter_activity_per_case" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "Case Duration",
                null,
                {
                  "display" : "Average Case Duration"
                }
              ],
              [
                "avg",
                "Activity per Case",
                null,
                {
                  "display" : "Avg Activity per Case"
                }
              ],
              [
                "Total",
                "Cases with Activities",
                null,
                {
                  "display" : "Number of Cases With Activities"
                }
              ]
            ],
            "pigql" : "activity = load \"${App.EdgeMarts.ServiceActivity.Alias}\";activity = filter activity by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};activity = group activity by 'Owner.Name';activity = foreach activity generate coalesce(count(), 0) / coalesce(unique('Case.Id'), 0) as 'avg_Activity per Case', coalesce(unique('Case.Id'), 0) as 'Total_Cases with Activities',coalesce(avg('Case.{{column(Static_Duration.selection, [\"value\"]).asObject()}}'), 0) as 'avg_Case Duration','Owner.Name' as 'Owner.Name';activity = limit activity 2000;",
            "autoFilter" : true,
            "groups" : [
              "Owner.Name"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_total_cases_with_activities" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "Case.Id"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_activity_per_agent" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "activity = load \"${App.EdgeMarts.ServiceActivity.Alias}\";activity = filter activity by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};activity = group activity by all;activity = foreach activity generate coalesce(count(activity), 0)/coalesce(unique('Owner.Name'), 0) as 'sum_avg_activity_per_agent';activity =limit activity 2000;",
            "measures" : [
              [
                "sum",
                "avg_activity_per_agent"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_activity_per_case" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "activity = load \"${App.EdgeMarts.ServiceActivity.Alias}\";activity = filter activity by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};activity = group activity by all;activity = foreach activity generate coalesce(count(activity), 0)/coalesce(unique('Case.Id'), 0) as 'sum_avg_activity_per_case';activity =limit activity 2000;",
            "measures" : [
              [
                "sum",
                "avg_activity_per_case"
              ]
            ],
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "total_activities_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#f2536d\" when 100*(count(s)-count(r))/count(r) > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_product" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*",
                null,
                {
                  "display" : "Number of Activities"
                }
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseProduct}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Time_Selection" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Last 180 Days"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "YTD",
            "text_display" : "vs Prior YTD",
            "Backlog30DayClose" : "[\"current day - 395 days\"..\"current day - 1 year\"]",
            "BacklogCompare" : [
              "current day - 1 year",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Year",
            "ClosedField" : "'${Constants.ClosedDate}_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "${Constants.Fiscal_Prefix}year",
                0
              ],
              [
                "${Constants.Fiscal_Prefix}year",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "current ${Constants.Fiscal_Prefix}year",
              "current day"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Month'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "LastPeriodCompare" : [
              "current ${Constants.Fiscal_Prefix}year - 1 year",
              "current day - 1 year"
            ],
            "LastYearCompare" : [
              "current ${Constants.Fiscal_Prefix}year - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "${Constants.Fiscal_Prefix}year",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "SAQL" : "coalesce((avg(ThisYear['${Constants.CaseDuration}'])-avg(LastYear['${Constants.CaseDuration}']))/avg(LastYear['${Constants.CaseDuration}']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "QTD",
            "text_display" : "vs Prior QTD",
            "Backlog30DayClose" : "[\"current day - 120 days\"..\"current day - 1 quarter\"]",
            "BacklogCompare" : [
              "current day - 1 quarter",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Quarter",
            "ClosedField" : "'${Constants.ClosedDate}_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "${Constants.Fiscal_Prefix}quarter",
                0
              ],
              [
                "${Constants.Fiscal_Prefix}quarter",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "current ${Constants.Fiscal_Prefix}quarter",
              "current day"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Week')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Week'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "LastPeriodCompare" : [
              "current ${Constants.Fiscal_Prefix}quarter - 1 quarter",
              "current day - 1 quarter"
            ],
            "LastYearCompare" : [
              "current ${Constants.Fiscal_Prefix}quarter - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "${Constants.Fiscal_Prefix}quarter",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "SAQL" : "coalesce((avg(ThisYear['${Constants.CaseDuration}'])-avg(LastYear['${Constants.CaseDuration}']))/avg(LastYear['${Constants.CaseDuration}']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "MTD",
            "text_display" : "vs Prior MTD",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 1 month\"]",
            "BacklogCompare" : [
              "current day - 1 month",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Month",
            "ClosedField" : "'${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "month",
                0
              ],
              [
                "month",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "current month",
              "current month"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month'+\"~~~\"+'${Constants.ClosedDate}_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "LastPeriodCompare" : [
              "current month - 1 month",
              "current day - 1 month"
            ],
            "LastYearCompare" : [
              "current month - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 7 Days",
            "text_display" : "vs Prior 7 Days",
            "Backlog30DayClose" : "[\"current day - 37 days\"..\"current day - 7 days\"]",
            "BacklogCompare" : [
              "current day - 1 week",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 7 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "day",
                -7
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "7 days ago",
              "current day"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month'+\"~~~\"+'${Constants.ClosedDate}_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Month','CreatedDate_Day'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "LastPeriodCompare" : [
              "7 days ago - 1 week",
              "current day - 1 week"
            ],
            "LastYearCompare" : [
              "7 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "week",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 30 Days",
            "text_display" : "vs Prior 30 Days",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 30 days\"]",
            "BacklogCompare" : [
              "current day - 30 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 30 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "day",
                -30
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "30 days ago",
              "current day"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Week')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Week'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "LastPeriodCompare" : [
              "30 days ago - 30 days",
              "current day - 30 days"
            ],
            "LastYearCompare" : [
              "30 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 180 Days",
            "text_display" : "vs Prior 180 Days",
            "Backlog30DayClose" : "[\"current day - 240 days\"..\"current day - 180 days\"]",
            "BacklogCompare" : [
              "current day - 180 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 180 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "day",
                -180
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "180 days ago",
              "current day"
            ],
            "FullGroup" : "'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month')",
            "GroupbyCreatedDate" : "'CreatedDate_Year','CreatedDate_Month'",
            "Grouping" : "'CreatedDate_Year~~~CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "LastPeriodCompare" : [
              "180 days ago - 180 days",
              "current day - 180 days"
            ],
            "LastYearCompare" : [
              "180 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          }
        ],
        "visualizationParameters" : { }
      },
      "kpi_completed_activities" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "completed_activity_pct"
              ]
            ],
            "pigql" : "activity = load \"${App.EdgeMarts.ServiceActivity.Alias}\";activity = filter activity by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};comp_activity = filter activity by 'ActivityIsClosed' == \"Completed\";comp_activity = foreach comp_activity generate count() as 'cnt_comp_activities';result = group comp_activity by all full, activity by all;result = foreach result generate coalesce(sum(comp_activity.cnt_comp_activities), 0) / coalesce(count(activity), 0) * 100 as 'sum_completed_activity_pct';result = limit result 2000;",
            "autoFilter" : true,
            "groups" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "cases_with_activities_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastYearCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') as 'perc_Percent', (case when 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') < 0 then \"#f2536d\" when 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_case_type" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseType}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_by_product" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*",
                null,
                {
                  "display" : "Number of Activities"
                }
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseProduct}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "activity_per_case_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "activity_cnt",
                null,
                {
                  "display" : "Activities per Case"
                }
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\";q = filter q by {{column(IsClosed_21.selection, [\"ActivityIsClosed\"]).asEquality(\"ActivityIsClosed\")}};q = filter q by {{column(pie_activity_type.selection, [\"ActivityType\"]).asEquality(\"ActivityType\")}};q = filter q by {{column(activity_count_by_case_priority.selection, [\"Case.${Constants.CaseSeverityLevel}\"]).asEquality(\"Case.${Constants.CaseSeverityLevel}\")}};q = filter q by {{column(filter_account.selection, [\"Case.Account.Name\"]).asEquality(\"Case.Account.Name\")}}; q = filter q by {{column(filter_case_record_type.selection, [\"Case.${Constants.CaseRecordTypeField}\"]).asEquality(\"Case.${Constants.CaseRecordTypeField}\")}} && {{column(filter_case_status.selection, [\"Case.IsClosed\"]).asEquality(\"Case.IsClosed\")}}; q = filter q by {{column(filter_role.selection, [\"Case.Role.Name\"]).asEquality(\"Case.Role.Name\")}}; q = filter q by {{column(filter_product.selection, [\"Case.${Constants.CaseProduct}\"]).asEquality(\"Case.${Constants.CaseProduct}\")}} && {{column(activity_by_product.selection, [\"Case.${Constants.CaseProduct}\"]).asEquality(\"Case.${Constants.CaseProduct}\")}}; q = filter q by {{column(filter_reason.selection, [\"Case.${Constants.CaseReason}\"]).asEquality(\"Case.${Constants.CaseReason}\")}} && {{column(activity_by_reason.selection, [\"Case.${Constants.CaseReason}\"]).asEquality(\"Case.${Constants.CaseReason}\")}}; q = filter q by {{column(filter_case_origin.selection, [\"Case.${Constants.CaseOrigin}\"]).asEquality(\"Case.${Constants.CaseOrigin}\")}} && {{column(activity_by_case_origin.selection, [\"Case.${Constants.CaseOrigin}\"]).asEquality(\"Case.${Constants.CaseOrigin}\")}}; q = filter q by {{column(filter_case_type.selection, [\"Case.${Constants.CaseType}\"]).asEquality(\"Case.${Constants.CaseType}\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};r = filter q by ({{column(filter_activity_owner.selection, [\"Owner.Name\"]).asEquality(\"Owner.Name\")}} && {{column(scatter_activity_per_case.selection, [\"Owner.Name\"]).asEquality(\"Owner.Name\")}}); r = group r by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}});r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('Case.Id') as 'avg_activity_cnt', (case when (\"{{cell(filter_activity_owner.selection, 0, \"Owner.Name\").asString()}}\" == \"all\" && \"{{cell(scatter_activity_per_case.selection, 0, \"Owner.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Agents\" end) as 'Performance'; s = group q by ({{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}); s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count()/unique('Case.Id') as 'avg_activity_cnt', \"Team\" as 'Performance';u = union r, s; u = filter u by 'Performance' != \"ALL\";",
            "groups" : [
              "{{cell(Time_Selection.selection, 0, \"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "filter_account" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.Account.Name"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "IsClosed_21" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ActivityIsClosed"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_reason" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseReason}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CreatedDate_Year_Cre_1" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              [
                "CreatedDate_Year",
                "CreatedDate_Month",
                "CreatedDate_Day"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "cases_with_activities_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') as 'perc_Percent', (case when 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') < 0 then \"#f2536d\" when 100*(unique(s.'Case.Id')-unique(r.'Case.Id'))/unique(r.'Case.Id') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_agent_vs_team" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\";q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};q = group q by all;q = foreach q generate coalesce(({{coalesce(cell(kpi_activity_per_agent.result, 0, \"sum_avg_activity_per_agent\"),0).asObject()}} - ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}))/ ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}),0)*100 as 'perc_Percent', (case when coalesce(({{coalesce(cell(kpi_activity_per_agent.result, 0, \"sum_avg_activity_per_agent\"),0).asObject()}} - ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}))/ ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}),0)*100 < 0 then \"#f2536d\" when coalesce(({{coalesce(cell(kpi_activity_per_agent.result, 0, \"sum_avg_activity_per_agent\"),0).asObject()}} - ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}))/ ({{coalesce(cell(kpi_total_activity.result, 0, \"count\"),0).asObject()}}/{{coalesce(cell(kpi_agent_count.result, 0, \"unique_Owner.Name\"),0).asObject()}}),0)*100 > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true,
            "groups" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "filter_role" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.Role.Name"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "pie_activity_type" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ActivityType"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "Static_Duration" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : true,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "${Constants.CaseDurationLabel}"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : true,
        "values" : [
          {
            "display" : "${Constants.CaseDurationLabel}",
            "value" : [
              "${Constants.CaseDuration}"
            ],
            "pigql_value" : "${Constants.CaseDuration}",
            "measure_field" : "avg_${Constants.CaseDuration}"
          }
        ],
        "visualizationParameters" : { }
      },
      "filter_case_origin" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Case.${Constants.CaseOrigin}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "lens_1" : {
        "groups" : [ ],
        "isFacet" : true,
        "numbers" : [ ],
        "query" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = foreach q generate first('Case.CaseNumber') as 'Case.CaseNumber','Id', first('Subject') as 'Subject', first('ActivityType') as 'Activity Type', first('Owner.Name') as 'Owner.Name', first('${Constants.CaseStatus}') as '${Constants.CaseStatus}', first('${Constants.CaseSeverityLevel}') as '${Constants.CaseSeverityLevel}', avg('Case.{{column(Static_Duration.selection, [\"pigql_value\"]).asObject()}}') as '{{column(Static_Duration.selection, [\"measure_field\"]).asObject()}}', first('Case.Account.Name') as 'Case.Account.Name'; q = limit q 100;",
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "container_19" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_kpi_agent_vs_team" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 12,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "kpi_agent_vs_team",
          "textAlignment" : "center",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "vs Team",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_kpi_total_cases_with_activities" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "fontSize" : 32,
          "measureField" : "unique_Case.Id",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_total_cases_with_activities",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "Cases with Activities",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "container_18" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_17" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_16" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_15" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_14" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Agent_Activity" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Agent Activity",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_13" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "listselector_filter_case_type" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_case_type",
          "title" : "Case Type"
        },
        "type" : "listselector"
      },
      "listselector_IsClosed_21" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "IsClosed_21",
          "title" : "Open/Completed"
        },
        "type" : "listselector"
      },
      "number_kpi_agent_count" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "unique_Owner.Name",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_agent_count",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "Agents Working",
          "titleColor" : "#C5D3E0",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "listselector_filter_role" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_role",
          "title" : "Role"
        },
        "type" : "listselector"
      },
      "listselector_filter_case_origin" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_case_origin",
          "title" : "By Case Origin"
        },
        "type" : "listselector"
      },
      "number_kpi_activity_per_agent" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_avg_activity_per_agent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_activity_per_agent",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "Avg Activities per Agent",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_cases_with_activities_PrevPeriod" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "cases_with_activities_PrevPeriod",
          "textAlignment" : "center",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_activity_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "exploreLink" : false,
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "activity_over_time",
          "theme" : "dark"
        },
        "type" : "chart"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_23" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_22" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_kpi_activity_per_case" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "sum_avg_activity_per_case",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_activity_per_case",
          "textAlignment" : "left",
          "title" : "Avg Activities per Case",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "container_21" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_20" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_total_activities_PrevPeriod" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "total_activities_PrevPeriod",
          "textAlignment" : "center",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "listselector_filter_case_record_type" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_case_record_type",
          "title" : "Case Record Type"
        },
        "type" : "listselector"
      },
      "chart_activity_count_by_case_priority" : {
        "parameters" : {
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "activity_count_by_case_priority",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "listselector_filter_reason" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_reason",
          "title" : "By Case Reason"
        },
        "type" : "listselector"
      },
      "text_filter_info_text" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Click charts to filter dashboard",
          "textAlignment" : "left",
          "textColor" : "#7D98B3"
        },
        "type" : "text"
      },
      "chart_activity_per_case_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : false,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "activity_per_case_over_time",
          "theme" : "dark"
        },
        "type" : "chart"
      },
      "text_byType" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "By Type",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_Agent_Activity_iphone" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "Agent Activity",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_activity_by_reason" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "# of Activities"
          },
          "step" : "activity_by_reason",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : 30,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "table_lens_1" : {
        "parameters" : {
          "customBulkActions" : [ ],
          "exploreLink" : false,
          "step" : "lens_1"
        },
        "type" : "table"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Activity_Breakdown" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Activity Breakdown",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_10" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_cases_with_activities_LastYear" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "cases_with_activities_LastYear",
          "textAlignment" : "right",
          "title" : "vs Last Year",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "link_Home" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Analytics Overview'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Overview",
          "textAlignment" : "center",
          "textColor" : "#091A3E",
          "visualizationType" : "hbar"
        },
        "type" : "link"
      },
      "number_kpi_total_activity" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "fontSize" : 32,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_total_activity",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "Total Activities",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "listselector_filter_product" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_product",
          "title" : "By Product Family"
        },
        "type" : "listselector"
      },
      "text_Case_Details" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Case Details",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "listselector_Static_Duration" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : true,
          "step" : "Static_Duration",
          "title" : "Duration"
        },
        "type" : "listselector"
      },
      "listselector_filter_case_status" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_case_status",
          "title" : "Cases"
        },
        "type" : "listselector"
      },
      "text_bubble_info_text" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Click on bubble to filter dashboard",
          "textAlignment" : "left",
          "textColor" : "#7D98B3"
        },
        "type" : "text"
      },
      "chart_scatter_activity_per_case" : {
        "parameters" : {
          "legend" : {
            "showHeader" : true,
            "show" : true,
            "customSize" : 20,
            "position" : "right-top",
            "inside" : false
          },
          "x" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Avg Of Case Duration"
          },
          "visualizationType" : "scatter",
          "y" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Activity Per Case"
          },
          "step" : "scatter_activity_per_case",
          "theme" : "light",
          "exploreLink" : false,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          }
        },
        "type" : "chart"
      },
      "text_Activity_Segmentation" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Activity Segmentation",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "listselector_filter_account" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_account",
          "title" : "Account"
        },
        "type" : "listselector"
      },
      "listselector_filter_activity_owner" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_activity_owner",
          "title" : "Agent"
        },
        "type" : "listselector"
      },
      "text_Activity_Summary" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Activity Summary",
          "textAlignment" : "left",
          "textColor" : "#C5D3E0"
        },
        "type" : "text"
      },
      "number_total_activities_LastYear" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "total_activities_LastYear",
          "textAlignment" : "right",
          "title" : "vs Last Year",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "listselector_Time_Selection" : {
        "parameters" : {
          "compact" : false,
          "expanded" : false,
          "exploreLink" : false,
          "instant" : true,
          "measureField" : "",
          "step" : "Time_Selection",
          "title" : "Date Range"
        },
        "type" : "listselector"
      },
      "listselector_2" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : true,
          "measureField" : "count",
          "step" : "filter_role",
          "title" : "Role"
        },
        "type" : "listselector"
      },
      "container_26" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_activity_by_case_origin" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "# of Activities"
          },
          "step" : "activity_by_case_origin",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : 30,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "container_25" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_24" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "link_Activity" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Agent Activity'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Activity",
          "textColor" : "rgb(89, 65, 149)"
        },
        "type" : "link"
      },
      "chart_pie_activity_type" : {
        "parameters" : {
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "pie_activity_type",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "chart_activity_by_product" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : "# of Activities"
          },
          "step" : "activity_by_product",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : 30,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : true,
          "measureField" : "count",
          "step" : "filter_activity_owner",
          "title" : "Agent"
        },
        "type" : "listselector"
      },
      "link_Performance" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Agent Performance'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Performance",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "text_byCasePriority" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "By Case Priority",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_Activity_Analysis_by_Volume_Duration_and_Avg_Activity_per_Case" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Activity by Volume, Duration and Avg Activity per Case",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_kpi_completed_activities" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_completed_activity_pct",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_completed_activities",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)",
          "title" : "% Completed Activities",
          "titleColor" : "#C5D3E0",
          "titleSize" : 12
        },
        "type" : "number"
      }
    }
  }
}