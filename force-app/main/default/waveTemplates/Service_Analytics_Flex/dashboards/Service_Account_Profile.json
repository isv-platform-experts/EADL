{
  "name" : "Service_Account_Profile",
  "label" : "Service Account Profile",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "state" : {
    "dataSourceLinks" : [ ],
    "gridLayouts" : [
      {
        "maxWidth" : 1360,
        "name" : "Default",
        "numColumns" : 48,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 17,
                "column" : 1,
                "name" : "text_Account_Profile",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C5D3E0",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 36,
                "name" : "link_Home",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C5D3E0",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 40,
                "name" : "link_Account_Profile",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(89, 65, 149)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 2
                }
              },
              {
                "colspan" : 7,
                "column" : 40,
                "name" : "pillbox_filter_toggle",
                "row" : 155,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 2,
                "column" : 45,
                "name" : "link_Constants_CaseCustomerSatLabel",
                "row" : 8,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#C5D3E0",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_1",
                "row" : 3,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(146, 113, 232)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "listselector_filter_account",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 11,
                "name" : "listselector_filter_recordtype",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 6,
                "name" : "listselector_filter_type",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 4,
                "column" : 16,
                "name" : "listselector_static_Duration",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "listselector_Time_Selection",
                "row" : 13,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_2",
                "row" : 11,
                "rowspan" : 8,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Service_Breakdown",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_filter_escalated",
                "row" : 30,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_filter_SLA",
                "row" : 106,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_filter_priority",
                "row" : 49,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_filter_origin",
                "row" : 68,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 1,
                "name" : "chart_filter_activity",
                "row" : 87,
                "rowspan" : 15,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 0,
                "name" : "container_3",
                "row" : 19,
                "rowspan" : 104,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 15,
                "column" : 10,
                "name" : "text_Accounts_with_highest_case_volume",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 23,
                "column" : 10,
                "name" : "chart_account_by_avg_duration_avg_csat",
                "row" : 31,
                "rowspan" : 31,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 25,
                "column" : 9,
                "name" : "container_4",
                "row" : 19,
                "rowspan" : 45,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "text_Account_Scorecard",
                "row" : 21,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 27, 61)",
                  "borderColor" : "rgb(9, 27, 61)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 35,
                "name" : "number_kpi_total_case_count",
                "row" : 25,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 7,
                "column" : 40,
                "name" : "number_TotalCases_PrevPeriod",
                "row" : 27,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(TotalCases_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(TotalCases_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 5,
                "column" : 35,
                "name" : "number_kpi_open_case_count",
                "row" : 33,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 5,
                "column" : 42,
                "name" : "number_kpi_total_closed_case_count",
                "row" : 33,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 13,
                "column" : 34,
                "name" : "chart_case_count_by_openclosed_over_time",
                "row" : 40,
                "rowspan" : 10,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "number_kpi_open_opportunity_amount",
                "row" : 54,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [
                    "bottom",
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 35,
                "name" : "number_kpi_won_opportunity_amount",
                "row" : 58,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 14,
                "column" : 34,
                "name" : "container_5",
                "row" : 19,
                "rowspan" : 45,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 27, 61)",
                  "borderColor" : "#C5D3E0",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 19,
                "column" : 10,
                "name" : "text_Account_Metrics_and_Trends",
                "row" : 66,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 12,
                "name" : "text_Constants_CaseDurationLabel",
                "row" : 71,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 10,
                "column" : 31,
                "name" : "text_Constants_CaseCustomerSatLabel",
                "row" : 71,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 12,
                "name" : "number_kpi_avg_duration",
                "row" : 74,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 19,
                "name" : "number_Duration_PrevPeriod",
                "row" : 76,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 31,
                "name" : "number_kpi_avg_csat",
                "row" : 74,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 38,
                "name" : "number_CSAT_PrevPeriod",
                "row" : 76,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [
                    "right"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 14,
                "column" : 12,
                "name" : "chart_avg_duration_over_time",
                "row" : 81,
                "rowspan" : 13,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 14,
                "column" : 31,
                "name" : "chart_avg_csat_over_time",
                "row" : 81,
                "rowspan" : 13,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 12,
                "name" : "number_kpi_avg_activity_count",
                "row" : 101,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 19,
                "name" : "number_Activity_PrevPeriod",
                "row" : 103,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Activity_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(Activity_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 16,
                "column" : 31,
                "name" : "chart_StageDurationVsAverage",
                "row" : 102,
                "rowspan" : 19,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 14,
                "column" : 12,
                "name" : "chart_average_activities_over_time",
                "row" : 108,
                "rowspan" : 13,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 12,
                "column" : 1,
                "name" : "text_Case_Segmentation",
                "row" : 125,
                "rowspan" : 4,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 7,
                "column" : 40,
                "name" : "pillbox_static_Order",
                "row" : 126,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 11,
                "column" : 3,
                "name" : "text_By_Product_Family",
                "row" : 130,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 26,
                "name" : "text_By_Constants_CaseReasonLabel",
                "row" : 129,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 19,
                "column" : 3,
                "name" : "chart_count_cases_by_product",
                "row" : 134,
                "rowspan" : 17,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 19,
                "column" : 26,
                "name" : "chart_count_cases_by_reason",
                "row" : 133,
                "rowspan" : 18,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_8",
                "row" : 123,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 46,
                "column" : 1,
                "name" : "table_raw_case",
                "row" : 159,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 48,
                "column" : 0,
                "name" : "container_7",
                "row" : 153,
                "rowspan" : 33,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 10,
                "column" : 12,
                "name" : "text_Activity_Count",
                "row" : 98,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 17,
                "column" : 31,
                "name" : "text_Average_Duration_in_Status",
                "row" : 98,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 9,
                "column" : 1,
                "name" : "text_Case_Details",
                "row" : 154,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 39,
                "column" : 9,
                "name" : "container_35",
                "row" : 64,
                "rowspan" : 59,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_filter_info_text",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_filter_isEscalated",
                "row" : 28,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Open_Cases_by_SLA",
                "row" : 103,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 7,
                "column" : 11,
                "name" : "pillbox_static_CSAT",
                "row" : 28,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Case_Priority",
                "row" : 46,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Case_Origin",
                "row" : 65,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 8,
                "column" : 1,
                "name" : "text_Title_Activity_Type",
                "row" : 84,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 22,
                "column" : 10,
                "name" : "text_bubble_info_text",
                "row" : 23,
                "rowspan" : 2,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#C5D3E0",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "documentId" : "",
          "fit" : "original"
        },
        "version" : 1.0
      },
      {
        "name" : "iPhone",
        "numColumns" : 6,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_1",
                "row" : 0,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "rgb(146, 113, 232)",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "listselector_filter_account",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "listselector_static_Duration",
                "row" : 6,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "listselector_Time_Selection",
                "row" : 9,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_2",
                "row" : 6,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#E6ECF2",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Service_Breakdown",
                "row" : 83,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_filter_info_text",
                "row" : 86,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_filter_isEscalated",
                "row" : 89,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_filter_escalated",
                "row" : 92,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Open_Cases_by_SLA",
                "row" : 104,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_filter_SLA",
                "row" : 107,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Case_Priority",
                "row" : 119,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_filter_priority",
                "row" : 122,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Case_Origin",
                "row" : 134,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_filter_origin",
                "row" : 137,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Title_Activity_Type",
                "row" : 149,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_filter_activity",
                "row" : 152,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_3",
                "row" : 83,
                "rowspan" : 84,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Accounts_with_highest_case_volume",
                "row" : 12,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_bubble_info_text",
                "row" : 15,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "pillbox_static_CSAT",
                "row" : 18,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 4
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_account_by_avg_duration_avg_csat",
                "row" : 21,
                "rowspan" : 25,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_4",
                "row" : 12,
                "rowspan" : 35,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Account_Scorecard",
                "row" : 48,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 27, 61)",
                  "borderColor" : "rgb(9, 27, 61)",
                  "borderEdges" : [
                    "top"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_total_case_count",
                "row" : 51,
                "rowspan" : 5,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 2,
                "column" : 3,
                "name" : "number_TotalCases_PrevPeriod",
                "row" : 53,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(TotalCases_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(TotalCases_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_open_case_count",
                "row" : 71,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "number_kpi_total_closed_case_count",
                "row" : 71,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_case_count_by_openclosed_over_time",
                "row" : 58,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "number_kpi_open_opportunity_amount",
                "row" : 77,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "rgba(51, 87, 121, 0.5)",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_won_opportunity_amount",
                "row" : 77,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_5",
                "row" : 47,
                "rowspan" : 11,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(9, 27, 61)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Account_Metrics_and_Trends",
                "row" : 167,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Constants_CaseDurationLabel",
                "row" : 170,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Constants_CaseCustomerSatLabel",
                "row" : 185,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_avg_duration",
                "row" : 173,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_avg_csat",
                "row" : 188,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_Duration_PrevPeriod",
                "row" : 179,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(Duration_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_CSAT_PrevPeriod",
                "row" : 194,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(CSAT_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "chart_avg_duration_over_time",
                "row" : 173,
                "rowspan" : 9,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "chart_avg_csat_over_time",
                "row" : 188,
                "rowspan" : 9,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Activity_Count",
                "row" : 200,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "text_Average_Duration_in_Status",
                "row" : 215,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_kpi_avg_activity_count",
                "row" : 203,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_StageDurationVsAverage",
                "row" : 218,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 3,
                "column" : 0,
                "name" : "number_Activity_PrevPeriod",
                "row" : 209,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "{{coalesce(cell(Activity_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderColor" : "{{coalesce(cell(Activity_PrevPeriod.result, 0, \"color\"),\"#7d98b3\").asString()}}",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 3,
                "column" : 3,
                "name" : "chart_average_activities_over_time",
                "row" : 200,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_35",
                "row" : 167,
                "rowspan" : 66,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Case_Segmentation",
                "row" : 233,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "pillbox_static_Order",
                "row" : 236,
                "rowspan" : 3,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 2,
                "column" : 0,
                "name" : "text_By_Constants_CaseReasonLabel",
                "row" : 239,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_By_Product_Family",
                "row" : 254,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_count_cases_by_reason",
                "row" : 242,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "chart_count_cases_by_product",
                "row" : 257,
                "rowspan" : 12,
                "widgetStyle" : {
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [
                    "bottom"
                  ],
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_8",
                "row" : 233,
                "rowspan" : 36,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_Case_Details",
                "row" : 269,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 4,
                "column" : 1,
                "name" : "pillbox_filter_toggle",
                "row" : 272,
                "rowspan" : 3,
                "widgetStyle" : {
                  "borderColor" : "#A3B8CC",
                  "borderEdges" : [ ],
                  "borderRadius" : 4,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "table_raw_case",
                "row" : 275,
                "rowspan" : 24,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_7",
                "row" : 269,
                "rowspan" : 30,
                "widgetStyle" : {
                  "backgroundColor" : "#FFFFFF",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "text_iphone_Title_Account_Profile",
                "row" : 1,
                "rowspan" : 4,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_36",
                "row" : 58,
                "rowspan" : 13,
                "widgetStyle" : {
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 8,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "container_37",
                "row" : 71,
                "rowspan" : 12,
                "widgetStyle" : {
                  "backgroundColor" : "#091A3E",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [
          "maxWidth(599)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#E6ECF2",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "kpi_avg_activity_count" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "Activity"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by all; q = foreach q generate count() / unique('Case.Account.Name')  as 'avg_Activity';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_total_case_count" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_open_case_count" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "IsClosed",
                [
                  "false"
                ],
                "in"
              ],
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "static_Duration" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "${Constants.CaseDurationLabel}"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "${Constants.CaseDurationLabel}",
            "value" : [
              "avg",
              "${Constants.CaseDuration}"
            ],
            "pigql_value" : "${Constants.CaseDuration}",
            "measure_field" : "avg_${Constants.CaseDuration}"
          }
        ],
        "visualizationParameters" : { }
      },
      "count_cases_by_product" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseProduct}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : "{{cell(static_Order.selection, 0, \"compact_value\").asObject()}}"
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "case_count_by_openclosed_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "IsClosed"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "filter_priority" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseSeverityLevel}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "avg_csat_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "CSAT"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'CSAT' >= -10; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by 'IsClosed' == \"true\"; q = filter q by {{column(filter_origin.selection, [\"${Constants.CaseOrigin}\"]).asEquality(\"${Constants.CaseOrigin}\")}}; q = filter q by {{column(filter_priority.selection, [\"${Constants.CaseSeverityLevel}\"]).asEquality(\"${Constants.CaseSeverityLevel}\")}};  q = filter q by {{column(filter_recordtype.selection, [\"${Constants.CaseRecordTypeField}\"]).asEquality(\"${Constants.CaseRecordTypeField}\")}}; q = filter q by {{column(filter_escalated.selection, [\"IsEscalated\"]).asEquality(\"IsEscalated\")}}; q = filter q by {{column(count_cases_by_reason.selection, [\"${Constants.CaseReason}\"]).asEquality(\"${Constants.CaseReason}\")}}; q = filter q by {{column(count_cases_by_product.selection, [\"${Constants.CaseProduct}\"]).asEquality(\"${Constants.CaseProduct}\")}};  q = filter q by {{column(filter_type.selection, [\"${Constants.CaseType}\"]).asEquality(\"${Constants.CaseType}\")}}; r = filter q by ({{column(filter_account.selection, [\"Account.Name\"]).asEquality(\"Account.Name\")}} && {{column(account_by_avg_duration_avg_csat.selection, [\"Account.Name\"]).asEquality(\"Account.Name\")}}); r = group r by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, avg('CSAT') as 'avg_CSAT', (case when (\"{{cell(filter_account.selection, 0, \"Account.Name\").asString()}}\" == \"all\" && \"{{cell(account_by_avg_duration_avg_csat.selection, 0, \"Account.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Accounts\" end) as 'Performance'; s = group q by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}},  avg('CSAT') as 'avg_CSAT', \"All Accounts\" as 'Performance'; u = union s, r; u = filter u by 'Performance' != \"ALL\";",
            "groups" : [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "static_Order" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Desc"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "Asc",
            "value" : "asc",
            "compact_value" : true
          },
          {
            "display" : "Desc",
            "value" : "desc",
            "compact_value" : false
          }
        ],
        "visualizationParameters" : { }
      },
      "TotalCases_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#3CAF6D\" when 100*(count(s)-count(r))/count(r) > 0 then \"#D4504C\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_won_opportunity_amount" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceOpportunity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Amount"
              ]
            ],
            "filters" : [
              [
                "IsWon",
                [
                  "true"
                ],
                "in"
              ],
              [
                "Account.Name",
                "{{column(filter_account.selection, [\"Account.Name\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_type" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseType}"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "Time_Selection" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "Last 180 Days"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "YTD",
            "text_display" : "vs Prior YTD",
            "Backlog30DayClose" : "[\"current day - 395 days\"..\"current day - 1 year\"]",
            "BacklogCompare" : [
              "current day - 1 year",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Year",
            "ClosedField" : "'${Constants.ClosedDate}_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "${Constants.Fiscal_Prefix}year",
                0
              ],
              [
                "${Constants.Fiscal_Prefix}year",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "current ${Constants.Fiscal_Prefix}year",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month",
            "LastPeriodCompare" : [
              "current ${Constants.Fiscal_Prefix}year - 1 year",
              "current day - 1 year"
            ],
            "LastYearCompare" : [
              "current ${Constants.Fiscal_Prefix}year - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "${Constants.Fiscal_Prefix}year",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "SAQL" : "coalesce((avg(ThisYear['${Constants.CaseDuration}'])-avg(LastYear['${Constants.CaseDuration}']))/avg(LastYear['${Constants.CaseDuration}']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "QTD",
            "text_display" : "vs Prior QTD",
            "Backlog30DayClose" : "[\"current day - 120 days\"..\"current day - 1 quarter\"]",
            "BacklogCompare" : [
              "current day - 1 quarter",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Quarter",
            "ClosedField" : "'${Constants.ClosedDate}_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "${Constants.Fiscal_Prefix}quarter",
                0
              ],
              [
                "${Constants.Fiscal_Prefix}quarter",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "current ${Constants.Fiscal_Prefix}quarter",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Week",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Week')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Week')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Week",
            "LastPeriodCompare" : [
              "current ${Constants.Fiscal_Prefix}quarter - 1 quarter",
              "current day - 1 quarter"
            ],
            "LastYearCompare" : [
              "current ${Constants.Fiscal_Prefix}quarter - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "${Constants.Fiscal_Prefix}quarter",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "SAQL" : "coalesce((avg(ThisYear['${Constants.CaseDuration}'])-avg(LastYear['${Constants.CaseDuration}']))/avg(LastYear['${Constants.CaseDuration}']),0)*100 as sum_Percent",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "MTD",
            "text_display" : "vs Prior MTD",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 1 month\"]",
            "BacklogCompare" : [
              "current day - 1 month",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last Month",
            "ClosedField" : "'${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "month",
                0
              ],
              [
                "month",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "current month",
              "current month"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month'+\"~~~\"+'${Constants.ClosedDate}_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "LastPeriodCompare" : [
              "current month - 1 month",
              "current day - 1 month"
            ],
            "LastYearCompare" : [
              "current month - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 7 Days",
            "text_display" : "vs Prior 7 days",
            "Backlog30DayClose" : "[\"current day - 37 days\"..\"current day - 7 days\"]",
            "BacklogCompare" : [
              "current day - 1 week",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 7 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day'",
            "CoGroup" : "('CreatedDate_Month','CreatedDate_Day')",
            "Compact" : [
              [
                "day",
                -7
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month','CreatedDate_Day'",
            "CreatedProjection" : "created['CreatedDate_Month'] +\"~~~\" + created['CreatedDate_Day']",
            "Current" : [
              "7 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month'+\"~~~\"+'${Constants.ClosedDate}_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month']+\"~~~\"+created['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month'+\"~~~\"+'CreatedDate_Day' as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month','${Constants.ClosedDate}_Day')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day",
            "LastPeriodCompare" : [
              "7 days ago - 1 week",
              "current day - 1 week"
            ],
            "LastYearCompare" : [
              "7 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Day"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month",
              "CreatedDate_Day"
            ],
            "filter" : "week",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month']+\"~~~\"+ThisYear['CreatedDate_Day'] as 'CreatedDate_Year~~~CreatedDate_Month~~~CreatedDate_Day'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 30 Days",
            "text_display" : "vs Prior 30 days",
            "Backlog30DayClose" : "[\"current day - 60 days\"..\"current day - 30 days\"]",
            "BacklogCompare" : [
              "current day - 30 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 30 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Week'",
            "CoGroup" : "('CreatedDate_Week')",
            "Compact" : [
              [
                "day",
                -30
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Week'",
            "CreatedProjection" : "created['CreatedDate_Week']",
            "Current" : [
              "30 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Week",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Week' as 'CreatedDate_Year~~~CreatedDate_Week'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Week')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Week')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Week",
            "LastPeriodCompare" : [
              "30 days ago - 30 days",
              "current day - 30 days"
            ],
            "LastYearCompare" : [
              "30 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Week"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Week"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Week'] as 'CreatedDate_Year~~~CreatedDate_Week'",
            "trendProjection" : "toString(now(), \"yyyy~~~MM\")+\"~~~\"+toString(now(), \"99\")"
          },
          {
            "display" : "Last 180 Days",
            "text_display" : "vs Prior 180 days",
            "Backlog30DayClose" : "[\"current day - 240 days\"..\"current day - 180 days\"]",
            "BacklogCompare" : [
              "current day - 180 days",
              "current day"
            ],
            "BacklogLabel" : "Backlog Last 180 Days",
            "ClosedField" : "'${Constants.ClosedDate}_Month'",
            "CoGroup" : "('CreatedDate_Month')",
            "Compact" : [
              [
                "day",
                -180
              ],
              [
                "day",
                0
              ]
            ],
            "CreatedField" : "'CreatedDate_Month'",
            "CreatedProjection" : "created['CreatedDate_Month']",
            "Current" : [
              "180 days ago",
              "current day"
            ],
            "FullGroup" : "CreatedDate_Year~~~CreatedDate_Month",
            "GenerateClosedDate" : "'${Constants.ClosedDate}_Year'+\"~~~\"+'${Constants.ClosedDate}_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCoGroupDate" : "created['CreatedDate_Year']+\"~~~\"+created['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GenerateCreatedDate" : "'CreatedDate_Year'+\"~~~\"+'CreatedDate_Month' as 'CreatedDate_Year~~~CreatedDate_Month'",
            "GroupbyClosedDate" : "('${Constants.ClosedDate}_Year','${Constants.ClosedDate}_Month')",
            "GroupbyCreatedDate" : "('CreatedDate_Year','CreatedDate_Month')",
            "Grouping" : "CreatedDate_Year~~~CreatedDate_Month",
            "LastPeriodCompare" : [
              "180 days ago - 180 days",
              "current day - 180 days"
            ],
            "LastYearCompare" : [
              "180 days ago - 1 year",
              "current day - 1 year"
            ],
            "Measure" : [
              "Backlog",
              "Count",
              null,
              {
                "display" : "Backlog Count at Start of Month"
              }
            ],
            "compactGroup" : [
              "CreatedDate_Year",
              "CreatedDate_Month"
            ],
            "filter" : "month",
            "queryCogroupNew" : "first(ThisYear['CreatedDate_Year'])+\"~~~\"+ThisYear['CreatedDate_Month'] as 'CreatedDate_Year~~~CreatedDate_Month'",
            "trendProjection" : "toString(now(), \"yyyy\")+\"~~~\"+toString(now(), \"99\")"
          }
        ],
        "visualizationParameters" : { }
      },
      "average_activities_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\";  q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};r = filter q by ({{column(filter_account.selection, [\"Account.Name\"]).asEquality(\"Case.Account.Name\")}} && {{column(account_by_avg_duration_avg_csat.selection, [\"Account.Name\"]).asEquality(\"Case.Account.Name\")}}); r = group r by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count() as 'count',  (case when (\"{{cell(filter_account.selection, 0, \"Account.Name\").asString()}}\" == \"all\" && \"{{cell(account_by_avg_duration_avg_csat.selection, 0, \"Account.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Accounts\" end) as 'Performance'; s = group q by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, count() / unique('Case.Account.Name') as 'count', \"All Accounts\" as 'Performance'; u = union r, s; u = filter u by 'Performance' != \"ALL\";",
            "autoFilter" : true,
            "groups" : [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "kpi_avg_csat" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "CSAT"
              ]
            ],
            "filters" : [
              [
                "CSAT",
                [
                  [
                    -10
                  ]
                ],
                ">="
              ],
              [
                "IsClosed",
                [
                  "true"
                ],
                "in"
              ],
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "raw_case" : {
        "groups" : [ ],
        "isFacet" : true,
        "numbers" : [ ],
        "query" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by {{column(filter_toggle.selection, [\"IsClosed\"]).asEquality(\"IsClosed\")}};q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  q = foreach q generate 'CaseNumber', first('Account.Name') as 'Account.Name', ${Constants.CaseCSATQuery} ${Constants.CaseFCRQuery} first('${Constants.CaseType}') as '${Constants.CaseType}', first('Owner.Name') as 'Owner.Name', ${Constants.CaseSLAQuery} first('${Constants.CaseOrigin}') as '${Constants.CaseOrigin}', first('${Constants.CaseSeverityLevel}') as '${Constants.CaseSeverityLevel}', first('${Constants.CaseStatus}') as '${Constants.CaseStatus}', ${Constants.CaseSupportLevelQuery} first('IsEscalated') as 'Escalated', avg('{{column(static_Duration.selection, [\"pigql_value\"]).asObject()}}') as '{{column(static_Duration.selection, [\"measure_field\"]).asObject()}}'; q = order q by 'CaseNumber' desc; q = limit q 100;",
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false
      },
      "kpi_total_closed_case_count" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "filters" : [
              [
                "IsClosed",
                [
                  "true"
                ],
                "in"
              ],
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "TotalCases_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastYearCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#3CAF6D\" when 100*(count(s)-count(r))/count(r) > 0 then \"#D4504C\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "StageDurationVsAverage" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "Case.${Constants.CaseDuration}"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('Case.CreatedDate_Year','Case.CreatedDate_Month','Case.CreatedDate_Day')\")}};q = filter q by 'ChangeAfterCloseDate' == \"false\"; q = filter q by 'Field' == \"${Constants.CaseStatus}\"; average = filter q by {{column(count_cases_by_product.selection, [\"${Constants.CaseProduct}\"]).asEquality(\"Case.${Constants.CaseProduct}\")}}; average = filter average by {{column(count_cases_by_reason.selection, [\"${Constants.CaseReason}\"]).asEquality(\"Case.${Constants.CaseReason}\")}}; average = filter average by {{column(filter_type.selection, [\"${Constants.CaseType}\"]).asEquality(\"Case.${Constants.CaseType}\")}}; average = filter average by {{column(filter_recordtype.selection, [\"${Constants.CaseRecordTypeField}\"]).asEquality(\"Case.${Constants.CaseRecordTypeField}\")}}; average = filter average by {{column(filter_escalated.selection, [\"IsEscalated\"]).asEquality(\"Case.IsEscalated\")}}; average = filter average by {{column(filter_priority.selection, [\"${Constants.CaseSeverityLevel}\"]).asEquality(\"Case.${Constants.CaseSeverityLevel}\")}}; average = filter average by {{column(filter_origin.selection, [\"${Constants.CaseOrigin}\"]).asEquality(\"Case.${Constants.CaseOrigin}\")}}; averageOld = group average by 'OldValue'; averageOld = foreach averageOld generate 'OldValue' as '${Constants.CaseStatus}', avg(DateDiffOld) as 'Case.${Constants.CaseDuration}'; averageNew = filter average by 'IsLastChange' == \"true\"; averageNew = group averageNew by 'NewValue'; averageNew = foreach averageNew generate 'NewValue' as '${Constants.CaseStatus}', avg(DateDiffNew) as 'Case.${Constants.CaseDuration}'; averageTotal = union averageOld,averageNew; averageTotal = group averageTotal by '${Constants.CaseStatus}'; averageTotal = foreach averageTotal generate '${Constants.CaseStatus}' as '${Constants.CaseStatus}', \"All Accounts\" as 'Performance', avg('Case.${Constants.CaseDuration}') as 'avg_Case.${Constants.CaseDuration}'; averageAccount = filter average by ({{column(filter_account.selection, [\"Account.Name\"]).asEquality(\"Case.Account.Name\")}} && {{column(account_by_avg_duration_avg_csat.selection, [\"Account.Name\"]).asEquality(\"Case.Account.Name\")}}); averageAccountOld = group averageAccount by 'OldValue'; averageAccountOld = foreach averageAccountOld generate 'OldValue' as '${Constants.CaseStatus}', avg(DateDiffOld) as 'Case.${Constants.CaseDuration}'; averageAccountNew = filter averageAccount by 'IsLastChange' == \"true\"; averageAccountNew = group averageAccountNew by 'NewValue'; averageAccountNew = foreach averageAccountNew generate 'NewValue' as '${Constants.CaseStatus}', avg(DateDiffNew) as 'Case.${Constants.CaseDuration}'; averageAccountTotal = union averageAccountOld,averageAccountNew; averageAccountTotal = group averageAccountTotal by '${Constants.CaseStatus}'; averageAccountTotal = foreach averageAccountTotal generate '${Constants.CaseStatus}' as '${Constants.CaseStatus}', (case when (\"{{cell(filter_account.selection, 0, \"Account.Name\").asString()}}\" == \"all\" && \"{{cell(account_by_avg_duration_avg_csat.selection, 0, \"Account.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Accounts\" end) as 'Performance', avg('Case.${Constants.CaseDuration}') as 'avg_Case.${Constants.CaseDuration}'; FinalChart = union averageTotal, averageAccountTotal; FinalChart = filter FinalChart by 'Performance' != \"ALL\"; FinalChart = order FinalChart by 'avg_Case.${Constants.CaseDuration}' desc;",
            "autoFilter" : true,
            "groups" : [
              "${Constants.CaseStatus}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "kpi_avg_duration" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "Duration"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'IsClosed' == \"true\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = group q by all; q = foreach q generate avg('{{column(static_Duration.selection, [\"pigql_value\"]).asObject()}}') as 'avg_Duration';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "count_cases_by_reason" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseReason}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : "{{cell(static_Order.selection, 0, \"compact_value\").asObject()}}"
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_account" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Account.Name"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "static_CSAT" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : {
          "display" : [
            "CSAT"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "CSAT",
            "compact" : [
              [
                "avg",
                "CSAT"
              ],
              [
                "count",
                "*"
              ]
            ],
            "mea" : [
              -10
            ]
          },
          {
            "display" : "# of Cases",
            "compact" : [
              [
                "count",
                "*"
              ]
            ],
            "mea" : [
              -999
            ]
          }
        ],
        "visualizationParameters" : { }
      },
      "filter_origin" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseOrigin}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : "false"
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "account_by_avg_duration_avg_csat" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : "{{concat(column(static_Duration.selection, [\"value\"]), cell(static_CSAT.selection,0, \"compact\")).asObject()}}",
            "limit" : 10,
            "groups" : [
              "Account.Name"
            ],
            "filters" : [
              [
                "CSAT",
                [
                  [
                    "{{cell(static_CSAT.selection,0, \"mea\").asObject()}}"
                  ]
                ],
                ">="
              ],
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                "count",
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "filter_recordtype" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseRecordTypeField}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "kpi_open_opportunity_amount" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceOpportunity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Amount"
              ]
            ],
            "filters" : [
              [
                "Account.Name",
                "{{column(filter_account.selection, [\"Account.Name\"]).asObject()}}"
              ],
              [
                "CloseDate",
                [
                  [
                    [
                      "${Constants.Fiscal_Prefix}quarter",
                      0
                    ],
                    [
                      "${Constants.Fiscal_Prefix}quarter",
                      0
                    ]
                  ]
                ],
                ">=<="
              ],
              [
                "IsClosed",
                [
                  "false"
                ],
                "in"
              ]
            ]
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Activity_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  r = filter q  by {{cell(Time_Selection.selection, 0, \"LastYearCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#D4504C\" when 100*(count(s)-count(r))/count(r) > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Activity_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceActivity.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}};  r = filter q  by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(count(s)-count(r))/count(r) as 'perc_Percent', (case when 100*(count(s)-count(r))/count(r) < 0 then \"#D4504C\" when 100*(count(s)-count(r))/count(r) > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "avg_duration_over_time" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "avg",
                "Duration"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; q = filter q by 'IsClosed' == \"true\"; q = filter q by {{column(filter_origin.selection, [\"${Constants.CaseOrigin}\"]).asEquality(\"${Constants.CaseOrigin}\")}}; q = filter q by {{column(filter_priority.selection, [\"${Constants.CaseSeverityLevel}\"]).asEquality(\"${Constants.CaseSeverityLevel}\")}};  q = filter q by {{column(filter_recordtype.selection, [\"${Constants.CaseRecordTypeField}\"]).asEquality(\"${Constants.CaseRecordTypeField}\")}}; q = filter q by {{column(filter_escalated.selection, [\"IsEscalated\"]).asEquality(\"IsEscalated\")}}; q = filter q by {{column(count_cases_by_reason.selection, [\"${Constants.CaseReason}\"]).asEquality(\"${Constants.CaseReason}\")}}; q = filter q by {{column(count_cases_by_product.selection, [\"${Constants.CaseProduct}\"]).asEquality(\"${Constants.CaseProduct}\")}};  q = filter q by {{column(filter_type.selection, [\"${Constants.CaseType}\"]).asEquality(\"${Constants.CaseType}\")}}; r = filter q by ({{column(filter_account.selection, [\"Account.Name\"]).asEquality(\"Account.Name\")}} && {{column(account_by_avg_duration_avg_csat.selection, [\"Account.Name\"]).asEquality(\"Account.Name\")}}); r = group r by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; r = foreach r generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}}, avg('${Constants.CaseDuration}') as 'avg_Duration', (case when (\"{{cell(filter_account.selection, 0, \"Account.Name\").asString()}}\" == \"all\" && \"{{cell(account_by_avg_duration_avg_csat.selection, 0, \"Account.Name\").asString()}}\" == \"all\") then \"ALL\" else \"Selected Accounts\" end) as 'Performance'; s = group q by {{cell(Time_Selection.selection, 0, \"GroupbyCreatedDate\").asObject()}}; s = foreach s generate {{cell(Time_Selection.selection, 0, \"GenerateCreatedDate\").asObject()}},  avg('${Constants.CaseDuration}') as 'avg_Duration', \"All Accounts\" as 'Performance'; u = union s, r; u = filter u by 'Performance' != \"ALL\";",
            "groups" : [
              "{{cell(Time_Selection.selection,0,\"compactGroup\").asObject()}}",
              "Performance"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "time"
        }
      },
      "static_No_CSAT" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "single",
        "start" : {
          "display" : [
            "# of Cases"
          ]
        },
        "type" : "staticflex",
        "useGlobal" : false,
        "values" : [
          {
            "display" : "# of Cases",
            "compact" : [
              [
                "count",
                "*"
              ]
            ],
            "mea" : [
              -999
            ]
          }
        ],
        "visualizationParameters" : { }
      },
      "filter_toggle" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "IsClosed"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false
      },
      "filter_SLA" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseSLA}"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "Duration_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'IsClosed' == \"true\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') as 'perc_Percent', (case when 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') < 0 then \"#3CAF6D\" when 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') > 0 then \"#D4504C\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_escalated" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "IsEscalated"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "CSAT_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \"true\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastYearCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') as 'perc_Percent', (case when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') < 0 then \"#D4504C\" when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CSAT_PrevPeriod" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'CSAT' >= -10; q = filter q by 'IsClosed' == \"true\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') as 'perc_Percent', (case when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') < 0 then \"#D4504C\" when 100*(avg(s.'CSAT')-avg(r.'CSAT'))/avg(r.'CSAT') > 0 then \"#3CAF6D\" else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Duration_LastYear" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "perc",
                "Percent"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCase.Alias}\"; q = filter q by 'IsClosed' == \"true\"; r = filter q by {{cell(Time_Selection.selection, 0, \"LastPeriodCompare\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; s = filter q by {{cell(Time_Selection.selection, 0, \"Current\").asDateRange(\"date('CreatedDate_Year','CreatedDate_Month','CreatedDate_Day')\")}}; t = group r by all, s by all; t = foreach t generate 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') as 'perc_Percent', (case when 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') < 0 then \"#3CAF6D\" when 100*(avg(s.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}')-avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}'))/avg(r.'{{cell(static_Duration.selection, 0, \"pigql_value\").asObject()}}') > 0 then \"#D4504C\"  else \"#7D98B3\" end) as 'color';",
            "autoFilter" : true
          },
          "version" : -1.0
        },
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "filter_activity" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceActivity.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "ActivityType"
            ],
            "filters" : [
              [
                "CreatedDate",
                "{{column(Time_Selection.selection, [\"Compact\"]).asObject()}}"
              ]
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "chart_count_cases_by_product" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : ""
          },
          "step" : "count_cases_by_product",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : 30,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "container_19" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_18" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_17" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_16" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_15" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_14" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_13" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_kpi_total_case_count" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_total_case_count",
          "textAlignment" : "left",
          "title" : "Cases",
          "titleColor" : "#C5D3E0",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "text_Case_Priority" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Case Priority",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_kpi_avg_csat" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_CSAT",
          "numberColor" : "#091A3E",
          "numberSize" : 32,
          "step" : "kpi_avg_csat",
          "textAlignment" : "left",
          "title" : "average CSAT",
          "titleColor" : "#335779",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "chart_account_by_avg_duration_avg_csat" : {
        "parameters" : {
          "legend" : {
            "showHeader" : true,
            "show" : true,
            "customSize" : 30,
            "position" : "right-top",
            "inside" : false
          },
          "x" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "visualizationType" : "scatter",
          "y" : {
            "sqrtScale" : false,
            "showZero" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "account_by_avg_duration_avg_csat",
          "theme" : "wave",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          }
        },
        "type" : "chart"
      },
      "text_Account_Scorecard" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Account Scorecard",
          "textAlignment" : "left",
          "textColor" : "#C5D3E0"
        },
        "type" : "text"
      },
      "container_23" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_22" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_21" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_20" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "listselector_static_Duration" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : true,
          "step" : "static_Duration",
          "title" : "Duration"
        },
        "type" : "listselector"
      },
      "chart_1" : {
        "parameters" : {
          "legend" : {
            "showHeader" : true,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "x" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "visualizationType" : "scatter",
          "y" : {
            "sqrtScale" : false,
            "showZero" : true,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "account_by_avg_duration_avg_csat",
          "theme" : "wave",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          }
        },
        "type" : "chart"
      },
      "number_TotalCases_LastYear" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "{{coalesce(cell(TotalCases_LastYear.result, 0, \"color\"),\"#7d98b3\").asString()}}",
          "numberSize" : 12,
          "step" : "TotalCases_LastYear",
          "textAlignment" : "right",
          "title" : "vs Last Year",
          "titleColor" : "#C5D3E0",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "text_iphone_Title_Account_Profile" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "Account Profile",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_filter_info_text" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Click charts to filter dashboard",
          "textAlignment" : "left",
          "textColor" : "#7D98B3"
        },
        "type" : "text"
      },
      "chart_avg_csat_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "avg_csat_over_time",
          "theme" : "light"
        },
        "type" : "chart"
      },
      "chart_case_count_by_openclosed_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "case_count_by_openclosed_over_time",
          "theme" : "dark"
        },
        "type" : "chart"
      },
      "container_12" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_11" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_10" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Constants_CaseCustomerSatLabel" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "CSAT",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "link_Home" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Analytics Overview'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Overview",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "container_37" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_36" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Case_Details" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Case Details",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_35" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_Accounts_with_highest_case_volume" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Accounts with highest case volume",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "number_CSAT_PrevPeriod" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "CSAT_PrevPeriod",
          "textAlignment" : "right",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "chart_average_activities_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "average_activities_over_time",
          "theme" : "light"
        },
        "type" : "chart"
      },
      "listselector_Time_Selection" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : true,
          "step" : "Time_Selection",
          "title" : "Date Range"
        },
        "type" : "listselector"
      },
      "container_29" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_28" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_27" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_26" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_25" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_24" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "text_filter_isEscalated" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Is Escalated",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "number_kpi_avg_duration" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_Duration",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "step" : "kpi_avg_duration",
          "textAlignment" : "left",
          "title" : "average {{column(static_Duration.selection, [\"display\"]).asObject()}}",
          "titleColor" : "#335779",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_Activity_PrevPeriod" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "Activity_PrevPeriod",
          "textAlignment" : "right",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 10
        },
        "type" : "number"
      },
      "text_Open_Cases_by_SLA" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Cases by SLA Violation",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_Average_Duration_in_Status" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Average Duration in Status",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_Account_Metrics_and_Trends" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Account Metrics and Trends",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "container_34" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_33" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_32" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_31" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_30" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "chart_filter_SLA" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : false,
          "visualizationType" : "pie",
          "theme" : "light",
          "step" : "filter_SLA",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "chart_avg_duration_over_time" : {
        "parameters" : {
          "showPoints" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "time",
          "missingValue" : "connect",
          "timeAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "fillArea" : true,
          "showZero" : true,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "avg_duration_over_time",
          "theme" : "light"
        },
        "type" : "chart"
      },
      "number_kpi_avg_activity_count" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "avg_Activity",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "step" : "kpi_avg_activity_count",
          "textAlignment" : "left",
          "title" : "average activity count",
          "titleColor" : "#335779",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "chart_count_cases_by_reason" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "left",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : false,
            "title" : ""
          },
          "step" : "count_cases_by_reason",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : 30,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "pillbox_filter_toggle" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "measureField" : "none",
          "step" : "filter_toggle",
          "title" : ""
        },
        "type" : "pillbox"
      },
      "link_Account_Profile" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Account Profile'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "Account Profile",
          "textAlignment" : "center",
          "textColor" : "#634F95"
        },
        "type" : "link"
      },
      "pillbox_static_Order" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "step" : "static_Order"
        },
        "type" : "pillbox"
      },
      "listselector_filter_recordtype" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_recordtype",
          "title" : "Record Type "
        },
        "type" : "listselector"
      },
      "number_TotalCases_PrevPeriod" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 12,
          "step" : "TotalCases_PrevPeriod",
          "textAlignment" : "right",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "number_kpi_total_closed_case_count" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_total_closed_case_count",
          "textAlignment" : "left",
          "title" : "Closed Cases",
          "titleColor" : "#7D98B3",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "container_1" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_2" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_3" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_4" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_5" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_6" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_7" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_8" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "container_9" : {
        "parameters" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "documentId" : "",
          "fit" : "original"
        },
        "type" : "container"
      },
      "number_Duration_PrevPeriod" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "#FFFFFF",
          "numberSize" : 14,
          "step" : "Duration_PrevPeriod",
          "textAlignment" : "right",
          "title" : "{{cell(Time_Selection.selection, 0, \"text_display\").asString()}}",
          "titleColor" : "#E6ECF2",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "chart_filter_priority" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : false,
          "visualizationType" : "pie",
          "theme" : "light",
          "step" : "filter_priority",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "chart_StageDurationVsAverage" : {
        "parameters" : {
          "autoFitMode" : "keepLabels",
          "showValues" : true,
          "bins" : {
            "breakpoints" : {
              "high" : 100,
              "low" : 0
            },
            "bands" : {
              "high" : {
                "color" : "#008000",
                "label" : ""
              },
              "low" : {
                "color" : "#B22222",
                "label" : ""
              },
              "medium" : {
                "color" : "#ffa500",
                "label" : ""
              }
            }
          },
          "legend" : {
            "showHeader" : true,
            "show" : false,
            "customSize" : "auto",
            "position" : "right-top",
            "inside" : false
          },
          "axisMode" : "multi",
          "visualizationType" : "hbar",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "binValues" : false,
          "measureAxis2" : {
            "sqrtScale" : false,
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "sqrtScale" : false,
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          },
          "step" : "StageDurationVsAverage",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "customSize" : "auto",
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "chart_filter_SLA1" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : true,
          "visualizationType" : "pie",
          "step" : "filter_SLA",
          "theme" : "wave",
          "exploreLink" : true,
          "title" : {
            "label" : "Cases by SLA Violation",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 80
        },
        "type" : "chart"
      },
      "chart_filter_origin" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : false,
          "visualizationType" : "pie",
          "theme" : "light",
          "step" : "filter_origin",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "chart_filter_priority1" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : true,
          "visualizationType" : "pie",
          "step" : "filter_priority",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "Open Case Priority",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 80
        },
        "type" : "chart"
      },
      "number_kpi_open_opportunity_amount" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Amount",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_open_opportunity_amount",
          "textAlignment" : "left",
          "title" : "Deals closing this quarter",
          "titleColor" : "#7D98B3",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "number_Duration_LastYear" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "{{coalesce(cell(Duration_LastYear.result, 0, \"color\"),\"#7d98b3\").asString()}}",
          "numberSize" : 14,
          "step" : "Duration_LastYear",
          "textAlignment" : "right",
          "title" : "vs last year",
          "titleColor" : "#335779",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "text_Service_Breakdown" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Service Breakdown",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "text_By_Constants_CaseReasonLabel" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "By Case Reason",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "pillbox_static_CSAT" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "step" : "static_CSAT"
        },
        "type" : "pillbox"
      },
      "number_kpi_open_case_count" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : true,
          "measureField" : "count",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_open_case_count",
          "textAlignment" : "left",
          "title" : "Open Cases",
          "titleColor" : "#7D98B3",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "table_raw_case" : {
        "parameters" : {
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "step" : "raw_case"
        },
        "type" : "table"
      },
      "chart_filter_origin1" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : true,
          "visualizationType" : "pie",
          "step" : "filter_origin",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "Open Cases by Status",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 80
        },
        "type" : "chart"
      },
      "text_Activity_Count" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Activity Count",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "listselector_static_CSAT" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : true,
          "step" : "static_CSAT",
          "title" : ""
        },
        "type" : "listselector"
      },
      "text_Constants_CaseDurationLabel" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Duration",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "listselector_filter_type" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_type",
          "title" : "Type"
        },
        "type" : "listselector"
      },
      "link_Constants_CaseCustomerSatLabel" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Service Customer Satisfaction'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 12,
          "includeState" : false,
          "text" : "CSAT",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "link"
      },
      "number_Activity_LastYear" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "{{coalesce(cell(Activity_LastYear.result, 0, \"color\"),\"#7d98b3\").asString()}}",
          "numberSize" : 14,
          "step" : "Activity_LastYear",
          "textAlignment" : "right",
          "title" : "vs last year",
          "titleColor" : "#335779",
          "titleSize" : 10
        },
        "type" : "number"
      },
      "text_Title_Activity_Type" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Activity Type",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_bubble_info_text" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Click on bubble to filter dashboard",
          "textAlignment" : "left",
          "textColor" : "#7D98B3"
        },
        "type" : "text"
      },
      "number_CSAT_LastYear" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "perc_Percent",
          "numberColor" : "{{coalesce(cell(CSAT_LastYear.result, 0, \"color\"),\"#7d98b3\").asString()}}",
          "numberSize" : 14,
          "step" : "CSAT_LastYear",
          "textAlignment" : "right",
          "title" : "vs last year",
          "titleColor" : "#335779",
          "titleSize" : 12
        },
        "type" : "number"
      },
      "chart_filter_activity" : {
        "parameters" : {
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "filter_activity",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "listselector_filter_account" : {
        "parameters" : {
          "compact" : false,
          "expanded" : true,
          "exploreLink" : false,
          "instant" : false,
          "measureField" : "count",
          "step" : "filter_account",
          "title" : "Account Name"
        },
        "type" : "listselector"
      },
      "text_Account_Profile" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Account Profile",
          "textAlignment" : "left",
          "textColor" : "rgb(9, 26, 62)"
        },
        "type" : "text"
      },
      "text_Case_Origin" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "Case Origin",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "text_Case_Segmentation" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Case Segmentation",
          "textAlignment" : "left",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      },
      "chart_filter_recordtype" : {
        "parameters" : {
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "filter_recordtype",
          "theme" : "wave",
          "exploreLink" : true,
          "title" : {
            "label" : "Volley",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 80
        },
        "type" : "chart"
      },
      "chart_filter_escalated" : {
        "parameters" : {
          "showMeasureTitle" : false,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "customSize" : "auto",
            "position" : "bottom-center",
            "inside" : false
          },
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "filter_escalated",
          "theme" : "light",
          "exploreLink" : true,
          "title" : {
            "label" : "",
            "align" : "center",
            "subtitleLabel" : ""
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "text_By_Product_Family" : {
        "parameters" : {
          "fontSize" : 14,
          "text" : "By Product Family",
          "textAlignment" : "left",
          "textColor" : "#335779"
        },
        "type" : "text"
      },
      "listselector_1" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "instant" : true,
          "measureField" : "count",
          "step" : "filter_account",
          "title" : "Account"
        },
        "type" : "listselector"
      },
      "number_kpi_won_opportunity_amount" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : true,
          "measureField" : "sum_Amount",
          "numberColor" : "#FFFFFF",
          "numberSize" : 24,
          "step" : "kpi_won_opportunity_amount",
          "textAlignment" : "left",
          "title" : "Closed lifetime",
          "titleColor" : "#7D98B3",
          "titleSize" : 14
        },
        "type" : "number"
      }
    }
  }
}