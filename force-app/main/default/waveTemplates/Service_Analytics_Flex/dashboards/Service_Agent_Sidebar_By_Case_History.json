{
  "name" : "Service_Case_History_Sidebar",
  "label" : "Service Agent Sidebar By Case History",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "state" : {
    "dataSourceLinks" : [ ],
    "gridLayouts" : [
      {
        "maxWidth" : 500,
        "name" : "Default",
        "numColumns" : 12,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 6,
                "column" : 6,
                "name" : "number_OwnerChangeCount",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(231, 237, 244)",
                  "borderColor" : "#091A3E",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 6,
                "column" : 0,
                "name" : "number_TotalCaseDuration",
                "row" : 0,
                "rowspan" : 2,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(231, 237, 244)",
                  "borderColor" : "#FFFFFF",
                  "borderEdges" : [ ],
                  "borderRadius" : 0,
                  "borderWidth" : 8
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "chart_CaseOwnershipChanges",
                "row" : 2,
                "rowspan" : 6,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(244, 246, 249)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "all"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "chart_StageDurationVsAverage",
                "row" : 8,
                "rowspan" : 10,
                "widgetStyle" : {
                  "backgroundColor" : "rgb(244, 246, 249)",
                  "borderColor" : "#E6ECF2",
                  "borderEdges" : [
                    "bottom",
                    "right",
                    "left"
                  ],
                  "borderRadius" : 0,
                  "borderWidth" : 1
                }
              },
              {
                "colspan" : 12,
                "column" : 0,
                "name" : "table_lens_1",
                "row" : 18,
                "rowspan" : 7,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "normal",
        "selectors" : [ ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "rgb(244, 246, 249)",
          "cellSpacingX" : 0,
          "cellSpacingY" : 0,
          "documentId" : "",
          "fit" : "original"
        },
        "version" : 1.0
      },
      {
        "name" : "iphone",
        "numColumns" : 1,
        "pages" : [
          {
            "widgets" : [
              {
                "colspan" : 1,
                "column" : 0,
                "name" : "text_desktop_only",
                "row" : 24,
                "rowspan" : 6,
                "widgetStyle" : {
                  "borderEdges" : [ ]
                }
              }
            ]
          }
        ],
        "rowHeight" : "fine",
        "selectors" : [
          "maxWidth(599)",
          "platform(iOS,Android)"
        ],
        "style" : {
          "alignmentX" : "left",
          "alignmentY" : "top",
          "backgroundColor" : "#F2F6FA",
          "cellSpacingX" : 8,
          "cellSpacingY" : 0,
          "fit" : "original",
          "gutterColor" : "#C5D3E0"
        },
        "version" : 1.0
      }
    ],
    "layouts" : [ ],
    "steps" : {
      "StageDurationVsAverage" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          },
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Duration",
                null,
                {
                  "display" : "Duration in Status"
                }
              ],
              [
                "avg",
                "Duration",
                null,
                {
                  "display" : "Average Duration (hrs)"
                }
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\"; q = filter q by ChangeAfterCloseDate == \"false\"; q = filter q by 'Field' == \"${Constants.CaseStatus}\"; average = filter q by {{coalesce(column(Product_Select.result, [\"${Constants.CaseProduct}\"]), \"NA\").asEquality(\"Case.${Constants.CaseProduct}\")}}; average = filter average by {{coalesce(column(Reason_Select.result, [\"${Constants.CaseReason}\"]), \"NA\").asEquality(\"Case.${Constants.CaseReason}\")}}; averageOld = group average by 'OldValue';averageOld = foreach averageOld generate 'OldValue' as '${Constants.CaseStatus}', avg(DateDiffOld) as 'Duration';averageNew = filter average by 'IsLastChange' == \"true\";  averageNew = group averageNew by 'NewValue';averageNew = foreach averageNew generate 'NewValue' as '${Constants.CaseStatus}', avg(DateDiffNew) as 'Duration';averageTotal = union averageOld,averageNew;averageTotal = group averageTotal by '${Constants.CaseStatus}';averageTotal = foreach averageTotal generate '${Constants.CaseStatus}' as '${Constants.CaseStatus}', avg(Duration) as 'avg_Duration';currentCase = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}}; currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as '${Constants.CaseStatus}', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \"true\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as '${Constants.CaseStatus}', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by '${Constants.CaseStatus}';currentCaseTotal = foreach currentCaseTotal generate '${Constants.CaseStatus}' as '${Constants.CaseStatus}', sum(Duration) as 'sum_Duration';CaseRecord = load \"${App.EdgeMarts.ServiceCase.Alias}\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"Id\")}}; CaseRecord = group CaseRecord by '${Constants.CaseStatus}'; CaseRecord = foreach CaseRecord generate '${Constants.CaseStatus}' as '${Constants.CaseStatus}', sum('${Constants.CaseDuration}') as 'sum_Duration';FinalChart = group CaseRecord by '${Constants.CaseStatus}' full, currentCaseTotal by '${Constants.CaseStatus}', averageTotal by '${Constants.CaseStatus}';FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['${Constants.CaseStatus}'] else currentCaseTotal['${Constants.CaseStatus}'] end) as '${Constants.CaseStatus}', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration', avg(averageTotal['avg_Duration']) as 'avg_Duration'; order FinalChart by 'sum_Duration' desc;",
            "groups" : [
              "${Constants.CaseStatus}"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "none",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CaseIDSelect" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "Id"
            ],
            "order" : [
              [
                -1,
                {
                  "ascending" : false
                }
              ]
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Reason_Select" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseReason}"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "TotalCaseDuration" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          },
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Duration"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\"; q = filter q by ChangeAfterCloseDate == \"false\"; q = filter q by 'Field' == \"Owner\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Id') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('OldOwner.Id')as'OldValue', sum('DateDiffOld') as 'DateDiffOld', 'CreatedDate' as 'CreatedDate', last('IsLastChange') as 'IsLastChange';mockTable = order mockTable by 'CreatedDate'; currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \"true\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration'; CaseRecord = load \"${App.EdgeMarts.ServiceCase.Alias}\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"Id\")}}; CaseRecord = group CaseRecord by 'Owner.Id'; CaseRecord = foreach CaseRecord generate 'Owner.Id' as 'Owner', sum('${Constants.CaseDuration}') as 'sum_Duration';  FinalChart = group CaseRecord by 'Owner' full, currentCaseTotal by 'Owner'; FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['Owner'] else currentCaseTotal['Owner'] end) as 'Owner', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration'; FinalChart = filter FinalChart by  {{coalesce(column(CaseOwnerIdSelect.result, [\"OwnerId\"]), \"NA\").asEquality(\"Owner\")}};"
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "HistoryRawTable" : {
        "groups" : [ ],
        "isFacet" : true,
        "numbers" : [ ],
        "query" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};Owner = filter q by 'Field' == \"Owner\"; Owner = filter Owner by ('NewOwner' matches \"005\" || 'NewOwner' matches \"00G\");Owner = foreach Owner generate avg('Case.${Constants.CaseDuration}') as 'avg_${Constants.CaseDuration}', toString(toDate(CreatedDate_sec_epoch) , \"yyyy-MM-dd hh:mm:ss a\") as 'CreatedDate', 'CreatedDate' as 'CreatedDateSort', 'NewOwner.Name' as 'NewOwner', 'NewStatus' as 'NewStatus';Status = filter q by 'Field' == \"Status\";Status = foreach Status generate toString(toDate(CreatedDate_sec_epoch) , \"yyyy-MM-dd hh:mm:ss a\") as 'CreatedDate','CreatedDate' as 'CreatedDateSort', avg('Case.${Constants.CaseDuration}') as 'avg_${Constants.CaseDuration}', 'NewOwner.Name' as 'NewOwner', 'NewStatus' as 'NewStatus';CombinedTable = union Status, Owner;CombinedTable = order CombinedTable by 'CreatedDateSort';",
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false
      },
      "Product_Select" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "${Constants.CaseProduct}"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CaseOwnerIdSelect" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "OwnerId"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CaseId_1" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "groups" : [
              "CaseId"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : false,
        "visualizationParameters" : { }
      },
      "OwnerChangeCount" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          },
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "count",
                "*"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\"; q = filter q by ChangeAfterCloseDate == \"false\";q = filter q by 'Field' == \"Owner\"; q = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Name') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('OldOwner.Name')as'OldValue', sum('DateDiffOld') as 'DateDiffOld';currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = group currentCase by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration'; CaseRecord = load \"${App.EdgeMarts.ServiceCase.Alias}\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"Id\")}}; CaseRecord = group CaseRecord by 'Owner.Name'; CaseRecord = foreach CaseRecord generate 'Owner.Name' as 'Owner', sum('${Constants.CaseDuration}') as 'sum_Duration';  FinalChart = group CaseRecord by all full, currentCaseTotal by all; FinalChart = foreach FinalChart generate  (case when count(currentCaseTotal) == 0 then 1 else count(currentCaseTotal) end) as 'count';"
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "CaseOwnershipChanges" : {
        "datasets" : [
          {
            "name" : "${App.EdgeMarts.ServiceCaseHistory.Alias}"
          },
          {
            "name" : "${App.EdgeMarts.ServiceCase.Alias}"
          }
        ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
              [
                "sum",
                "Duration"
              ]
            ],
            "pigql" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\"; q = filter q by ChangeAfterCloseDate == \"false\";q = filter q by 'Field' == \"Owner\";q = filter q by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}}; mockTable = group q by ('CreatedDate', 'CaseId');mockTable = foreach mockTable generate 'CaseId' as 'CaseId', last('NewOwner.Name') as 'NewValue', first('DateDiffNew') as 'FirstDateDiffNew', last('DateDiffNew') as 'LastDateDiffNew',  sum('DateDiffNew') as 'DateDiffNew', last('IsLastChange') as 'IsLastChange', last('OldOwner.Name')as'OldValue', sum('DateDiffOld') as 'DateDiffOld';currentCase = filter mockTable by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"CaseId\")}};averageOld = group mockTable by 'OldValue';averageOld = foreach averageOld generate 'OldValue' as 'Owner', avg(DateDiffOld) as 'Duration';averageNew = filter mockTable by 'IsLastChange' == \"true\"; averageNew = group averageNew by 'NewValue';averageNew = foreach averageNew generate 'NewValue' as 'Owner', avg(DateDiffNew) as 'Duration';averageTotal = union averageOld,averageNew;averageTotal = group averageTotal by 'Owner';averageTotal = foreach averageTotal generate 'Owner' as 'Owner', avg(Duration) as 'avg_Duration';currentCaseOld = group currentCase by 'OldValue';currentCaseOld = foreach currentCaseOld generate 'OldValue' as 'Owner', sum(DateDiffOld) as 'Duration';currentCaseNew = filter currentCase by 'IsLastChange' == \"true\"; currentCaseNew = group currentCaseNew by 'NewValue';currentCaseNew = foreach currentCaseNew generate 'NewValue' as 'Owner', sum(DateDiffNew) as 'Duration';currentCaseTotal = union currentCaseOld,currentCaseNew;currentCaseTotal = group currentCaseTotal by 'Owner';currentCaseTotal = foreach currentCaseTotal generate 'Owner' as 'Owner', sum(Duration) as 'sum_Duration';CaseRecord = load \"${App.EdgeMarts.ServiceCase.Alias}\"; CaseRecord = filter CaseRecord by {{coalesce(column(CaseIDSelect.result, [\"Id\"]), \"NA\").asEquality(\"Id\")}}; CaseRecord = group CaseRecord by 'Owner.Name'; CaseRecord = foreach CaseRecord generate 'Owner.Name' as 'Owner', sum('${Constants.CaseDuration}') as 'sum_Duration';  FinalChart = group CaseRecord by 'Owner' full, currentCaseTotal by 'Owner' full, averageTotal by 'Owner'; FinalChart = foreach FinalChart generate (case when count(currentCaseTotal) == 0 then CaseRecord['Owner'] else currentCaseTotal['Owner'] end) as 'OldOwner.Name', (case when count(currentCaseTotal) == 0 then sum(CaseRecord['sum_Duration']) else sum(currentCaseTotal['sum_Duration']) end) as 'sum_Duration', avg(averageTotal['avg_Duration']) as 'avg_Duration'; FinalChart = order FinalChart by 'sum_Duration' desc",
            "groups" : [
              "OldOwner.Name"
            ]
          },
          "version" : -1.0
        },
        "selectMode" : "none",
        "type" : "aggregateflex",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "lens_1" : {
        "groups" : [ ],
        "isFacet" : true,
        "numbers" : [ ],
        "query" : "q = load \"${App.EdgeMarts.ServiceCaseHistory.Alias}\";q = foreach q generate 'Case.Account.Name' as 'Case.Account.Name', 'Case.${Constants.CaseOrigin}' as 'Case.${Constants.CaseOrigin}', 'Case.${Constants.CaseSeverityLevel}' as 'Case.${Constants.CaseSeverityLevel}', 'Case.${Constants.CaseRecordTypeField}' as 'Case.${Constants.CaseRecordTypeField}';q = limit q 100;",
        "selectMode" : "single",
        "strings" : [ ],
        "type" : "saql",
        "useGlobal" : false
      }
    },
    "widgetStyle" : {
      "backgroundColor" : "#FFFFFF",
      "borderColor" : "#E6ECF2",
      "borderEdges" : [ ],
      "borderRadius" : 0,
      "borderWidth" : 1
    },
    "widgets" : {
      "number_OwnerChangeCount" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "count",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "step" : "OwnerChangeCount",
          "textAlignment" : "center",
          "textColor" : "rgb(41, 71, 102)",
          "title" : "Total Case Owners",
          "titleColor" : "#5C7A99",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "chart_CaseOwnershipChanges" : {
        "parameters" : {
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "position" : "right-top",
            "inside" : false
          },
          "showMeasureTitle" : false,
          "showTotal" : false,
          "visualizationType" : "pie",
          "step" : "CaseOwnershipChanges",
          "theme" : "light",
          "exploreLink" : false,
          "title" : {
            "label" : "Duration by Case Owner",
            "align" : "left",
            "subtitleLabel" : "Sum of Duration"
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "inner" : 70
        },
        "type" : "chart"
      },
      "chart_StageDurationVsAverage" : {
        "parameters" : {
          "autoFitMode" : "fit",
          "showValues" : true,
          "legend" : {
            "showHeader" : false,
            "show" : true,
            "position" : "top-center",
            "inside" : false
          },
          "axisMode" : "sync",
          "visualizationType" : "vbar",
          "exploreLink" : false,
          "title" : {
            "label" : "Duration in Status vs Average",
            "align" : "left",
            "subtitleLabel" : "Sum of Duration"
          },
          "trellis" : {
            "enable" : false,
            "type" : "x",
            "parameters" : { },
            "chartsPerLine" : 4
          },
          "measureAxis2" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : ""
          },
          "measureAxis1" : {
            "showTitle" : true,
            "showAxis" : true,
            "title" : "Duration"
          },
          "step" : "StageDurationVsAverage",
          "theme" : "light",
          "dimensionAxis" : {
            "showTitle" : false,
            "showAxis" : true,
            "title" : ""
          }
        },
        "type" : "chart"
      },
      "table_lens_1" : {
        "parameters" : {
          "customBulkActions" : [ ],
          "exploreLink" : true,
          "step" : "HistoryRawTable"
        },
        "type" : "table"
      },
      "number_TotalCaseDuration" : {
        "parameters" : {
          "compact" : false,
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_Duration",
          "numberColor" : "#091A3E",
          "numberSize" : 24,
          "step" : "TotalCaseDuration",
          "textAlignment" : "center",
          "textColor" : "rgb(41, 71, 102)",
          "title" : "Current Owner Duration",
          "titleColor" : "#5C7A99",
          "titleSize" : 14
        },
        "type" : "number"
      },
      "text_desktop_only" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "This dashboard is designed for \n desktop viewing only",
          "textAlignment" : "center",
          "textColor" : "#091A3E"
        },
        "type" : "text"
      }
    }
  }
}